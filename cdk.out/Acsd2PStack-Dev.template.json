{
 "Description": "Development environment - Safe to deploy and test",
 "Resources": {
  "UserPool6BA7E5F2": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_email",
       "Priority": 1
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "Policies": {
     "PasswordPolicy": {
      "MinimumLength": 8,
      "RequireLowercase": true,
      "RequireNumbers": true,
      "RequireSymbols": true,
      "RequireUppercase": true
     }
    },
    "Schema": [
     {
      "Mutable": true,
      "Name": "email",
      "Required": true
     }
    ],
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UserPoolName": "dev-UserPool",
    "UsernameAttributes": [
     "email"
    ],
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/UserPool/Resource"
   }
  },
  "UserPoolClient2F5918F7": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit",
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "email",
     "openid",
     "profile"
    ],
    "CallbackURLs": [
     "http://localhost:3000/callback",
     "https://yourdomain.com/callback"
    ],
    "ClientName": "dev-UserPoolClient",
    "ExplicitAuthFlows": [
     "ALLOW_USER_PASSWORD_AUTH",
     "ALLOW_ADMIN_USER_PASSWORD_AUTH",
     "ALLOW_USER_SRP_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "GenerateSecret": true,
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "UserPool6BA7E5F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/UserPoolClient/Resource"
   }
  },
  "UserPoolClientDescribeCognitoUserPoolClient19F18FF0": {
   "Type": "Custom::DescribeCognitoUserPoolClient",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"region\":\"us-west-1\",\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"describeUserPoolClient\",\"parameters\":{\"UserPoolId\":\"",
       {
        "Ref": "UserPool6BA7E5F2"
       },
       "\",\"ClientId\":\"",
       {
        "Ref": "UserPoolClient2F5918F7"
       },
       "\"},\"physicalResourceId\":{\"id\":\"",
       {
        "Ref": "UserPoolClient2F5918F7"
       },
       "\"},\"logApiResponseData\":false}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"region\":\"us-west-1\",\"service\":\"CognitoIdentityServiceProvider\",\"action\":\"describeUserPoolClient\",\"parameters\":{\"UserPoolId\":\"",
       {
        "Ref": "UserPool6BA7E5F2"
       },
       "\",\"ClientId\":\"",
       {
        "Ref": "UserPoolClient2F5918F7"
       },
       "\"},\"physicalResourceId\":{\"id\":\"",
       {
        "Ref": "UserPoolClient2F5918F7"
       },
       "\"},\"logApiResponseData\":false}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "UserPoolClientDescribeCognitoUserPoolClientCustomResourcePolicy0204E3CD"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/UserPoolClient/DescribeCognitoUserPoolClient/Resource/Default"
   }
  },
  "UserPoolClientDescribeCognitoUserPoolClientCustomResourcePolicy0204E3CD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "cognito-idp:DescribeUserPoolClient",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "UserPoolClientDescribeCognitoUserPoolClientCustomResourcePolicy0204E3CD",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/UserPoolClient/DescribeCognitoUserPoolClient/CustomResourcePolicy/Resource"
   }
  },
  "UsersTable9725E9C8": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TableName": "dev-Users"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/UsersTable/Resource"
   }
  },
  "ConversationsTableCD91EB96": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "timestamp",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "timestamp",
      "KeyType": "RANGE"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TableName": "dev-Conversations"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ConversationsTable/Resource"
   }
  },
  "ThreadsTable1D5C607C": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "timestamp",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "timestamp",
      "KeyType": "RANGE"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TableName": "dev-Threads"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ThreadsTable/Resource"
   }
  },
  "OrganizationsTable01047E98": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TableName": "dev-Organizations"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/OrganizationsTable/Resource"
   }
  },
  "RateLimitingTable259308DF": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "key",
      "AttributeType": "S"
     },
     {
      "AttributeName": "timestamp",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "key",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "timestamp",
      "KeyType": "RANGE"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "TableName": "dev-RateLimiting",
    "TimeToLiveSpecification": {
     "AttributeName": "ttl",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/RateLimitingTable/Resource"
   }
  },
  "StorageBucket19DB2FF8": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "dev-storage",
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/StorageBucket/Resource"
   }
  },
  "EmailAttachmentsBucket56FB991A": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "dev-email-attachments",
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/EmailAttachmentsBucket/Resource"
   }
  },
  "EmailProcessQueue10E28519": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 1209600,
    "QueueName": "dev-EmailProcessQueue",
    "VisibilityTimeout": 300
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/EmailProcessQueue/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "c099eb4e32cbf1c3da9c45a3b280efe2bed38d27d74aa72702b67d86d1b52354.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Timeout": 120
   },
   "DependsOn": [
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/AWS679f53fac002430cb0da5b7982bd2287/Resource",
    "aws:asset:path": "asset.c099eb4e32cbf1c3da9c45a3b280efe2bed38d27d74aa72702b67d86d1b52354",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd2287LogGroup449FB7C2": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "AWS679f53fac002430cb0da5b7982bd22872D164C4C"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/AWS679f53fac002430cb0da5b7982bd2287/LogGroup/Resource"
   }
  },
  "AllowCorsFunctionServiceRole4FA21473": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Allow-CorsFunction/ServiceRole/Resource"
   }
  },
  "AllowCorsFunctionServiceRoleDefaultPolicy2F40D9BA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AllowCorsFunctionServiceRoleDefaultPolicy2F40D9BA",
    "Roles": [
     {
      "Ref": "AllowCorsFunctionServiceRole4FA21473"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Allow-CorsFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AllowCorsFunctionA1715761": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "3145bf60f472090dadb252de57907ee5a7dcd713aa696bf918f82c033dc18ad3.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      }
     }
    },
    "FunctionName": "dev-Allow-Cors",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "AllowCorsFunctionServiceRole4FA21473",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "AllowCorsFunctionServiceRoleDefaultPolicy2F40D9BA",
    "AllowCorsFunctionServiceRole4FA21473"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Allow-CorsFunction/Resource",
    "aws:asset:path": "asset.3145bf60f472090dadb252de57907ee5a7dcd713aa696bf918f82c033dc18ad3",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AllowCorsFunctionLogGroup3A6DCCE4": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "AllowCorsFunctionA1715761"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Allow-CorsFunction/LogGroup/Resource"
   }
  },
  "APIAuthorizerFunctionServiceRole7B7B1D33": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/API-AuthorizerFunction/ServiceRole/Resource"
   }
  },
  "APIAuthorizerFunctionServiceRoleDefaultPolicy3668462E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "APIAuthorizerFunctionServiceRoleDefaultPolicy3668462E",
    "Roles": [
     {
      "Ref": "APIAuthorizerFunctionServiceRole7B7B1D33"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/API-AuthorizerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "APIAuthorizerFunctionE9E30643": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "530e0033c49a79d5a5e4190b4020709bb3fdeadbc4c3065959a8484a1cbf7c50.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors"
     }
    },
    "FunctionName": "dev-API-Authorizer",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "APIAuthorizerFunctionServiceRole7B7B1D33",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "APIAuthorizerFunctionServiceRoleDefaultPolicy3668462E",
    "APIAuthorizerFunctionServiceRole7B7B1D33"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/API-AuthorizerFunction/Resource",
    "aws:asset:path": "asset.530e0033c49a79d5a5e4190b4020709bb3fdeadbc4c3065959a8484a1cbf7c50",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "APIAuthorizerFunctionLogGroup97C6F9B4": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "APIAuthorizerFunctionE9E30643"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/API-AuthorizerFunction/LogGroup/Resource"
   }
  },
  "AuthorizeFunctionServiceRoleD135CFF0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/AuthorizeFunction/ServiceRole/Resource"
   }
  },
  "AuthorizeFunctionServiceRoleDefaultPolicyB682E486": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AuthorizeFunctionServiceRoleDefaultPolicyB682E486",
    "Roles": [
     {
      "Ref": "AuthorizeFunctionServiceRoleD135CFF0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/AuthorizeFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AuthorizeFunctionC3F570CF": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "719a3cd50a6dcfe528399dfb84a933f66e2da886ecab87e9719dc98c7f85324a.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer"
     }
    },
    "FunctionName": "dev-Authorize",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "AuthorizeFunctionServiceRoleD135CFF0",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "AuthorizeFunctionServiceRoleDefaultPolicyB682E486",
    "AuthorizeFunctionServiceRoleD135CFF0"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/AuthorizeFunction/Resource",
    "aws:asset:path": "asset.719a3cd50a6dcfe528399dfb84a933f66e2da886ecab87e9719dc98c7f85324a",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "AuthorizeFunctionLogGroup48720195": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "AuthorizeFunctionC3F570CF"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/AuthorizeFunction/LogGroup/Resource"
   }
  },
  "CheckDomainStatusFunctionServiceRole56229AFA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Check-Domain-StatusFunction/ServiceRole/Resource"
   }
  },
  "CheckDomainStatusFunctionServiceRoleDefaultPolicy0BC4AFEF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CheckDomainStatusFunctionServiceRoleDefaultPolicy0BC4AFEF",
    "Roles": [
     {
      "Ref": "CheckDomainStatusFunctionServiceRole56229AFA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Check-Domain-StatusFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CheckDomainStatusFunction1093986F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "fc11e697233a1660c9dc2ec691f85e254eb28bf74bccb7d730356a0cf452cb96.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize"
     }
    },
    "FunctionName": "dev-Check-Domain-Status",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "CheckDomainStatusFunctionServiceRole56229AFA",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "CheckDomainStatusFunctionServiceRoleDefaultPolicy0BC4AFEF",
    "CheckDomainStatusFunctionServiceRole56229AFA"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Check-Domain-StatusFunction/Resource",
    "aws:asset:path": "asset.fc11e697233a1660c9dc2ec691f85e254eb28bf74bccb7d730356a0cf452cb96",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CheckDomainStatusFunctionLogGroup9412E1B6": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "CheckDomainStatusFunction1093986F"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Check-Domain-StatusFunction/LogGroup/Resource"
   }
  },
  "CreateSESDkimRecordsFunctionServiceRoleE73D39ED": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Create-SES-Dkim-RecordsFunction/ServiceRole/Resource"
   }
  },
  "CreateSESDkimRecordsFunctionServiceRoleDefaultPolicy694682F1": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CreateSESDkimRecordsFunctionServiceRoleDefaultPolicy694682F1",
    "Roles": [
     {
      "Ref": "CreateSESDkimRecordsFunctionServiceRoleE73D39ED"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Create-SES-Dkim-RecordsFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CreateSESDkimRecordsFunction96D74B56": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "650b56d3747d7b5fc84751a2194258f6536b1d303c6273def14a0b371f6925fd.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status"
     }
    },
    "FunctionName": "dev-Create-SES-Dkim-Records",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "CreateSESDkimRecordsFunctionServiceRoleE73D39ED",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "CreateSESDkimRecordsFunctionServiceRoleDefaultPolicy694682F1",
    "CreateSESDkimRecordsFunctionServiceRoleE73D39ED"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Create-SES-Dkim-RecordsFunction/Resource",
    "aws:asset:path": "asset.650b56d3747d7b5fc84751a2194258f6536b1d303c6273def14a0b371f6925fd",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CreateSESDkimRecordsFunctionLogGroupDAB223BF": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "CreateSESDkimRecordsFunction96D74B56"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Create-SES-Dkim-RecordsFunction/LogGroup/Resource"
   }
  },
  "CreateSESIdentityFunctionServiceRoleCEDF34E3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Create-SES-IdentityFunction/ServiceRole/Resource"
   }
  },
  "CreateSESIdentityFunctionServiceRoleDefaultPolicy06BB4480": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CreateSESIdentityFunctionServiceRoleDefaultPolicy06BB4480",
    "Roles": [
     {
      "Ref": "CreateSESIdentityFunctionServiceRoleCEDF34E3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Create-SES-IdentityFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CreateSESIdentityFunctionB7240D58": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "4895a78d74bfaf839d2c858747ba587c84a8cddf6808b34779835d59feb8066d.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records"
     }
    },
    "FunctionName": "dev-Create-SES-Identity",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "CreateSESIdentityFunctionServiceRoleCEDF34E3",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "CreateSESIdentityFunctionServiceRoleDefaultPolicy06BB4480",
    "CreateSESIdentityFunctionServiceRoleCEDF34E3"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Create-SES-IdentityFunction/Resource",
    "aws:asset:path": "asset.4895a78d74bfaf839d2c858747ba587c84a8cddf6808b34779835d59feb8066d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CreateSESIdentityFunctionLogGroupED090F3E": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "CreateSESIdentityFunctionB7240D58"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Create-SES-IdentityFunction/LogGroup/Resource"
   }
  },
  "CreateNewSessionFunctionServiceRole30D23BD7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/CreateNewSessionFunction/ServiceRole/Resource"
   }
  },
  "CreateNewSessionFunctionServiceRoleDefaultPolicyF44201D0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CreateNewSessionFunctionServiceRoleDefaultPolicyF44201D0",
    "Roles": [
     {
      "Ref": "CreateNewSessionFunctionServiceRole30D23BD7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/CreateNewSessionFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CreateNewSessionFunction3F952E8F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "b5a5e1386ccf7ecc183b4609697bb9d87aa16334dcb9de908baf600b2d334b71.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity"
     }
    },
    "FunctionName": "dev-CreateNewSession",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "CreateNewSessionFunctionServiceRole30D23BD7",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "CreateNewSessionFunctionServiceRoleDefaultPolicyF44201D0",
    "CreateNewSessionFunctionServiceRole30D23BD7"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/CreateNewSessionFunction/Resource",
    "aws:asset:path": "asset.b5a5e1386ccf7ecc183b4609697bb9d87aa16334dcb9de908baf600b2d334b71",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CreateNewSessionFunctionLogGroup36F315E9": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "CreateNewSessionFunction3F952E8F"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/CreateNewSessionFunction/LogGroup/Resource"
   }
  },
  "DBBatchSelectFunctionServiceRoleA9CEBC4C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DBBatchSelectFunction/ServiceRole/Resource"
   }
  },
  "DBBatchSelectFunctionServiceRoleDefaultPolicyFCE8E3EE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DBBatchSelectFunctionServiceRoleDefaultPolicyFCE8E3EE",
    "Roles": [
     {
      "Ref": "DBBatchSelectFunctionServiceRoleA9CEBC4C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DBBatchSelectFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DBBatchSelectFunction4B2FD1A1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "330e9df57cd16076983a749f4d2a2fca4c781574fd9a9d3d7ee8fdfc30e51ebe.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession"
     }
    },
    "FunctionName": "dev-DBBatchSelect",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "DBBatchSelectFunctionServiceRoleA9CEBC4C",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "DBBatchSelectFunctionServiceRoleDefaultPolicyFCE8E3EE",
    "DBBatchSelectFunctionServiceRoleA9CEBC4C"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DBBatchSelectFunction/Resource",
    "aws:asset:path": "asset.330e9df57cd16076983a749f4d2a2fca4c781574fd9a9d3d7ee8fdfc30e51ebe",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "DBBatchSelectFunctionLogGroupD8749F96": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "DBBatchSelectFunction4B2FD1A1"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DBBatchSelectFunction/LogGroup/Resource"
   }
  },
  "DBDeleteFunctionServiceRoleA97CC63E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DBDeleteFunction/ServiceRole/Resource"
   }
  },
  "DBDeleteFunctionServiceRoleDefaultPolicyB8128F9B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DBDeleteFunctionServiceRoleDefaultPolicyB8128F9B",
    "Roles": [
     {
      "Ref": "DBDeleteFunctionServiceRoleA97CC63E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DBDeleteFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DBDeleteFunction9588707C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "d1e11b2119d595de05590c59340353c8e1040a4fe981098563ed5752b534e5be.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect"
     }
    },
    "FunctionName": "dev-DBDelete",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "DBDeleteFunctionServiceRoleA97CC63E",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "DBDeleteFunctionServiceRoleDefaultPolicyB8128F9B",
    "DBDeleteFunctionServiceRoleA97CC63E"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DBDeleteFunction/Resource",
    "aws:asset:path": "asset.d1e11b2119d595de05590c59340353c8e1040a4fe981098563ed5752b534e5be",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "DBDeleteFunctionLogGroupFC79C416": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "DBDeleteFunction9588707C"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DBDeleteFunction/LogGroup/Resource"
   }
  },
  "DBSelectFunctionServiceRoleB01B7079": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DBSelectFunction/ServiceRole/Resource"
   }
  },
  "DBSelectFunctionServiceRoleDefaultPolicyFE7BAB6B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DBSelectFunctionServiceRoleDefaultPolicyFE7BAB6B",
    "Roles": [
     {
      "Ref": "DBSelectFunctionServiceRoleB01B7079"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DBSelectFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DBSelectFunction22A0CACB": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "4dbb693cc9a76f9a61a46a023681a05f74018a1fddfcec1a98bcf0a3dd9f4a7c.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete"
     }
    },
    "FunctionName": "dev-DBSelect",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "DBSelectFunctionServiceRoleB01B7079",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "DBSelectFunctionServiceRoleDefaultPolicyFE7BAB6B",
    "DBSelectFunctionServiceRoleB01B7079"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DBSelectFunction/Resource",
    "aws:asset:path": "asset.4dbb693cc9a76f9a61a46a023681a05f74018a1fddfcec1a98bcf0a3dd9f4a7c",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "DBSelectFunctionLogGroup649914BC": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "DBSelectFunction22A0CACB"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DBSelectFunction/LogGroup/Resource"
   }
  },
  "DBUpdateFunctionServiceRole3682A3C6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DBUpdateFunction/ServiceRole/Resource"
   }
  },
  "DBUpdateFunctionServiceRoleDefaultPolicyAF129649": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DBUpdateFunctionServiceRoleDefaultPolicyAF129649",
    "Roles": [
     {
      "Ref": "DBUpdateFunctionServiceRole3682A3C6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DBUpdateFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DBUpdateFunctionA839F286": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "f337abbb6d9836e9e66a8c1202ba759cbdc7c6ec249a0d62a5601145a06c6755.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect"
     }
    },
    "FunctionName": "dev-DBUpdate",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "DBUpdateFunctionServiceRole3682A3C6",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "DBUpdateFunctionServiceRoleDefaultPolicyAF129649",
    "DBUpdateFunctionServiceRole3682A3C6"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DBUpdateFunction/Resource",
    "aws:asset:path": "asset.f337abbb6d9836e9e66a8c1202ba759cbdc7c6ec249a0d62a5601145a06c6755",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "DBUpdateFunctionLogGroup15EF1AEE": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "DBUpdateFunctionA839F286"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DBUpdateFunction/LogGroup/Resource"
   }
  },
  "DeleteUserSupabaseFunctionServiceRoleA3E55199": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DeleteUserSupabaseFunction/ServiceRole/Resource"
   }
  },
  "DeleteUserSupabaseFunctionServiceRoleDefaultPolicy5269789C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DeleteUserSupabaseFunctionServiceRoleDefaultPolicy5269789C",
    "Roles": [
     {
      "Ref": "DeleteUserSupabaseFunctionServiceRoleA3E55199"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DeleteUserSupabaseFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DeleteUserSupabaseFunctionC89CDFE6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "df08010cee26be31a174b141db03eb40a576abfad6b1a0440bd1b8b5bf670330.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate"
     }
    },
    "FunctionName": "dev-DeleteUserSupabase",
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "DeleteUserSupabaseFunctionServiceRoleA3E55199",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 60
   },
   "DependsOn": [
    "DeleteUserSupabaseFunctionServiceRoleDefaultPolicy5269789C",
    "DeleteUserSupabaseFunctionServiceRoleA3E55199"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DeleteUserSupabaseFunction/Resource",
    "aws:asset:path": "asset.df08010cee26be31a174b141db03eb40a576abfad6b1a0440bd1b8b5bf670330",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "DeleteUserSupabaseFunctionLogGroup38D93945": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "DeleteUserSupabaseFunctionC89CDFE6"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/DeleteUserSupabaseFunction/LogGroup/Resource"
   }
  },
  "GenerateEmailFunctionServiceRoleC73070A2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/GenerateEmailFunction/ServiceRole/Resource"
   }
  },
  "GenerateEmailFunctionServiceRoleDefaultPolicyA07CC635": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerateEmailFunctionServiceRoleDefaultPolicyA07CC635",
    "Roles": [
     {
      "Ref": "GenerateEmailFunctionServiceRoleC73070A2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/GenerateEmailFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GenerateEmailFunctionCF0EFEE5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "9272dc705065e34aad34d35647ddbc42d81c60c19fe647b9660e5b9434538559.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase"
     }
    },
    "FunctionName": "dev-GenerateEmail",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "GenerateEmailFunctionServiceRoleC73070A2",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "GenerateEmailFunctionServiceRoleDefaultPolicyA07CC635",
    "GenerateEmailFunctionServiceRoleC73070A2"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/GenerateEmailFunction/Resource",
    "aws:asset:path": "asset.9272dc705065e34aad34d35647ddbc42d81c60c19fe647b9660e5b9434538559",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GenerateEmailFunctionLogGroupA5356FBA": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GenerateEmailFunctionCF0EFEE5"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/GenerateEmailFunction/LogGroup/Resource"
   }
  },
  "GenerateEVFunctionServiceRoleB7FDFE4C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/GenerateEVFunction/ServiceRole/Resource"
   }
  },
  "GenerateEVFunctionServiceRoleDefaultPolicyB607C62A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GenerateEVFunctionServiceRoleDefaultPolicyB607C62A",
    "Roles": [
     {
      "Ref": "GenerateEVFunctionServiceRoleB7FDFE4C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/GenerateEVFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GenerateEVFunctionC42A9082": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "7fd754f9c71e1ce35bb4503015b17ec83c6bdf9542e555730af83735a40fac04.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase",
      "GENERATEEMAIL_FUNCTION_NAME": "dev-GenerateEmail"
     }
    },
    "FunctionName": "dev-GenerateEV",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "GenerateEVFunctionServiceRoleB7FDFE4C",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "GenerateEVFunctionServiceRoleDefaultPolicyB607C62A",
    "GenerateEVFunctionServiceRoleB7FDFE4C"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/GenerateEVFunction/Resource",
    "aws:asset:path": "asset.7fd754f9c71e1ce35bb4503015b17ec83c6bdf9542e555730af83735a40fac04",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GenerateEVFunctionLogGroup9B6E81B9": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GenerateEVFunctionC42A9082"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/GenerateEVFunction/LogGroup/Resource"
   }
  },
  "GetCorsFunctionServiceRoleD7CFF7B8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Get-CorsFunction/ServiceRole/Resource"
   }
  },
  "GetCorsFunctionServiceRoleDefaultPolicy683958B9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetCorsFunctionServiceRoleDefaultPolicy683958B9",
    "Roles": [
     {
      "Ref": "GetCorsFunctionServiceRoleD7CFF7B8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Get-CorsFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetCorsFunction67994118": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "cb9875915c163f82a02d1325a3b3ab854a7f2f448a7654bbf22bb2a6f40a0203.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase",
      "GENERATEEMAIL_FUNCTION_NAME": "dev-GenerateEmail",
      "GENERATEEV_FUNCTION_NAME": "dev-GenerateEV"
     }
    },
    "FunctionName": "dev-Get-Cors",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "GetCorsFunctionServiceRoleD7CFF7B8",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "GetCorsFunctionServiceRoleDefaultPolicy683958B9",
    "GetCorsFunctionServiceRoleD7CFF7B8"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Get-CorsFunction/Resource",
    "aws:asset:path": "asset.cb9875915c163f82a02d1325a3b3ab854a7f2f448a7654bbf22bb2a6f40a0203",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GetCorsFunctionLogGroup7B374871": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GetCorsFunction67994118"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Get-CorsFunction/LogGroup/Resource"
   }
  },
  "getThreadAttrsFunctionServiceRole31C95CB9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/getThreadAttrsFunction/ServiceRole/Resource"
   }
  },
  "getThreadAttrsFunctionServiceRoleDefaultPolicy667812CA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "getThreadAttrsFunctionServiceRoleDefaultPolicy667812CA",
    "Roles": [
     {
      "Ref": "getThreadAttrsFunctionServiceRole31C95CB9"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/getThreadAttrsFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "getThreadAttrsFunctionB6F2A7CB": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "e58f06622cf92ee06cd57d7a0d7dd2bab338d7138e0343414f0bb006203db86d.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase",
      "GENERATEEMAIL_FUNCTION_NAME": "dev-GenerateEmail",
      "GENERATEEV_FUNCTION_NAME": "dev-GenerateEV",
      "GET_CORS_FUNCTION_NAME": "dev-Get-Cors"
     }
    },
    "FunctionName": "dev-getThreadAttrs",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "getThreadAttrsFunctionServiceRole31C95CB9",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "getThreadAttrsFunctionServiceRoleDefaultPolicy667812CA",
    "getThreadAttrsFunctionServiceRole31C95CB9"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/getThreadAttrsFunction/Resource",
    "aws:asset:path": "asset.e58f06622cf92ee06cd57d7a0d7dd2bab338d7138e0343414f0bb006203db86d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "getThreadAttrsFunctionLogGroupB8D1D5FE": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "getThreadAttrsFunctionB6F2A7CB"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/getThreadAttrsFunction/LogGroup/Resource"
   }
  },
  "GetUserConversationsFunctionServiceRoleA11D6D5E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/GetUserConversationsFunction/ServiceRole/Resource"
   }
  },
  "GetUserConversationsFunctionServiceRoleDefaultPolicyD8215E28": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetUserConversationsFunctionServiceRoleDefaultPolicyD8215E28",
    "Roles": [
     {
      "Ref": "GetUserConversationsFunctionServiceRoleA11D6D5E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/GetUserConversationsFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetUserConversationsFunction8BC8F605": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "11378a1ffde73836fa84321b9429dc2880b6eea1dde60fb57fdcd34d19b2b896.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase",
      "GENERATEEMAIL_FUNCTION_NAME": "dev-GenerateEmail",
      "GENERATEEV_FUNCTION_NAME": "dev-GenerateEV",
      "GET_CORS_FUNCTION_NAME": "dev-Get-Cors",
      "GETTHREADATTRS_FUNCTION_NAME": "dev-getThreadAttrs"
     }
    },
    "FunctionName": "dev-GetUserConversations",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "GetUserConversationsFunctionServiceRoleA11D6D5E",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "GetUserConversationsFunctionServiceRoleDefaultPolicyD8215E28",
    "GetUserConversationsFunctionServiceRoleA11D6D5E"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/GetUserConversationsFunction/Resource",
    "aws:asset:path": "asset.11378a1ffde73836fa84321b9429dc2880b6eea1dde60fb57fdcd34d19b2b896",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GetUserConversationsFunctionLogGroupF83B9FC3": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GetUserConversationsFunction8BC8F605"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/GetUserConversationsFunction/LogGroup/Resource"
   }
  },
  "LCPLlmResponseFunctionServiceRole82F1A00B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/LCPLlmResponseFunction/ServiceRole/Resource"
   }
  },
  "LCPLlmResponseFunctionServiceRoleDefaultPolicy95C07D76": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LCPLlmResponseFunctionServiceRoleDefaultPolicy95C07D76",
    "Roles": [
     {
      "Ref": "LCPLlmResponseFunctionServiceRole82F1A00B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/LCPLlmResponseFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LCPLlmResponseFunctionF4F11285": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "93329a1b5d09d4689f5ca7d71b8b6e369398b1007b39b26df00ac4b1a1b3352b.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase",
      "GENERATEEMAIL_FUNCTION_NAME": "dev-GenerateEmail",
      "GENERATEEV_FUNCTION_NAME": "dev-GenerateEV",
      "GET_CORS_FUNCTION_NAME": "dev-Get-Cors",
      "GETTHREADATTRS_FUNCTION_NAME": "dev-getThreadAttrs",
      "GETUSERCONVERSATIONS_FUNCTION_NAME": "dev-GetUserConversations"
     }
    },
    "FunctionName": "dev-LCPLlmResponse",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "LCPLlmResponseFunctionServiceRole82F1A00B",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "LCPLlmResponseFunctionServiceRoleDefaultPolicy95C07D76",
    "LCPLlmResponseFunctionServiceRole82F1A00B"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/LCPLlmResponseFunction/Resource",
    "aws:asset:path": "asset.93329a1b5d09d4689f5ca7d71b8b6e369398b1007b39b26df00ac4b1a1b3352b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "LCPLlmResponseFunctionLogGroup659E2670": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "LCPLlmResponseFunctionF4F11285"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/LCPLlmResponseFunction/LogGroup/Resource"
   }
  },
  "LoginUserFunctionServiceRoleA8D22722": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/LoginUserFunction/ServiceRole/Resource"
   }
  },
  "LoginUserFunctionServiceRoleDefaultPolicyB2F5FFBB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LoginUserFunctionServiceRoleDefaultPolicyB2F5FFBB",
    "Roles": [
     {
      "Ref": "LoginUserFunctionServiceRoleA8D22722"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/LoginUserFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LoginUserFunction917F38A7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "3a7eaf2517d8c536d641fabd37fecf8433a4a0b8361bc852628d22cf8b2f7e6b.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase",
      "GENERATEEMAIL_FUNCTION_NAME": "dev-GenerateEmail",
      "GENERATEEV_FUNCTION_NAME": "dev-GenerateEV",
      "GET_CORS_FUNCTION_NAME": "dev-Get-Cors",
      "GETTHREADATTRS_FUNCTION_NAME": "dev-getThreadAttrs",
      "GETUSERCONVERSATIONS_FUNCTION_NAME": "dev-GetUserConversations",
      "LCPLLMRESPONSE_FUNCTION_NAME": "dev-LCPLlmResponse"
     }
    },
    "FunctionName": "dev-LoginUser",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "LoginUserFunctionServiceRoleA8D22722",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "LoginUserFunctionServiceRoleDefaultPolicyB2F5FFBB",
    "LoginUserFunctionServiceRoleA8D22722"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/LoginUserFunction/Resource",
    "aws:asset:path": "asset.3a7eaf2517d8c536d641fabd37fecf8433a4a0b8361bc852628d22cf8b2f7e6b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "LoginUserFunctionLogGroup7F2CDBAF": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "LoginUserFunction917F38A7"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/LoginUserFunction/LogGroup/Resource"
   }
  },
  "OrganizationsCrudFunctionServiceRole38916DF7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Organizations-CrudFunction/ServiceRole/Resource"
   }
  },
  "OrganizationsCrudFunctionServiceRoleDefaultPolicy70220EEE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "OrganizationsCrudFunctionServiceRoleDefaultPolicy70220EEE",
    "Roles": [
     {
      "Ref": "OrganizationsCrudFunctionServiceRole38916DF7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Organizations-CrudFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "OrganizationsCrudFunctionB7E9984C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "79f0d1a742b3e17699028e9d6ea043933a9c25a12ae8bf9162b87cad66125470.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase",
      "GENERATEEMAIL_FUNCTION_NAME": "dev-GenerateEmail",
      "GENERATEEV_FUNCTION_NAME": "dev-GenerateEV",
      "GET_CORS_FUNCTION_NAME": "dev-Get-Cors",
      "GETTHREADATTRS_FUNCTION_NAME": "dev-getThreadAttrs",
      "GETUSERCONVERSATIONS_FUNCTION_NAME": "dev-GetUserConversations",
      "LCPLLMRESPONSE_FUNCTION_NAME": "dev-LCPLlmResponse",
      "LOGINUSER_FUNCTION_NAME": "dev-LoginUser"
     }
    },
    "FunctionName": "dev-Organizations-Crud",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "OrganizationsCrudFunctionServiceRole38916DF7",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "OrganizationsCrudFunctionServiceRoleDefaultPolicy70220EEE",
    "OrganizationsCrudFunctionServiceRole38916DF7"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Organizations-CrudFunction/Resource",
    "aws:asset:path": "asset.79f0d1a742b3e17699028e9d6ea043933a9c25a12ae8bf9162b87cad66125470",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "OrganizationsCrudFunctionLogGroup981CB511": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "OrganizationsCrudFunctionB7E9984C"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Organizations-CrudFunction/LogGroup/Resource"
   }
  },
  "OrganizationsMembersFunctionServiceRole50384FF1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Organizations-MembersFunction/ServiceRole/Resource"
   }
  },
  "OrganizationsMembersFunctionServiceRoleDefaultPolicyA1E17C10": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "OrganizationsMembersFunctionServiceRoleDefaultPolicyA1E17C10",
    "Roles": [
     {
      "Ref": "OrganizationsMembersFunctionServiceRole50384FF1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Organizations-MembersFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "OrganizationsMembersFunctionDE0053AA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "b9c9a01821101631834d5f35fd9cd224ab0e763b8320e97b9e704860af2822ed.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase",
      "GENERATEEMAIL_FUNCTION_NAME": "dev-GenerateEmail",
      "GENERATEEV_FUNCTION_NAME": "dev-GenerateEV",
      "GET_CORS_FUNCTION_NAME": "dev-Get-Cors",
      "GETTHREADATTRS_FUNCTION_NAME": "dev-getThreadAttrs",
      "GETUSERCONVERSATIONS_FUNCTION_NAME": "dev-GetUserConversations",
      "LCPLLMRESPONSE_FUNCTION_NAME": "dev-LCPLlmResponse",
      "LOGINUSER_FUNCTION_NAME": "dev-LoginUser",
      "ORGANIZATIONS_CRUD_FUNCTION_NAME": "dev-Organizations-Crud"
     }
    },
    "FunctionName": "dev-Organizations-Members",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "OrganizationsMembersFunctionServiceRole50384FF1",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "OrganizationsMembersFunctionServiceRoleDefaultPolicyA1E17C10",
    "OrganizationsMembersFunctionServiceRole50384FF1"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Organizations-MembersFunction/Resource",
    "aws:asset:path": "asset.b9c9a01821101631834d5f35fd9cd224ab0e763b8320e97b9e704860af2822ed",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "OrganizationsMembersFunctionLogGroup1DEAA3D0": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "OrganizationsMembersFunctionDE0053AA"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Organizations-MembersFunction/LogGroup/Resource"
   }
  },
  "ParseEventFunctionServiceRoleF8D3EAE8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ParseEventFunction/ServiceRole/Resource"
   }
  },
  "ParseEventFunctionServiceRoleDefaultPolicy57F7AC66": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ParseEventFunctionServiceRoleDefaultPolicy57F7AC66",
    "Roles": [
     {
      "Ref": "ParseEventFunctionServiceRoleF8D3EAE8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ParseEventFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ParseEventFunction3795DCE1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "da34e10f08cf6eb65ae8cc02780811bc593ac2e511af7bc7d63932e719e67817.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase",
      "GENERATEEMAIL_FUNCTION_NAME": "dev-GenerateEmail",
      "GENERATEEV_FUNCTION_NAME": "dev-GenerateEV",
      "GET_CORS_FUNCTION_NAME": "dev-Get-Cors",
      "GETTHREADATTRS_FUNCTION_NAME": "dev-getThreadAttrs",
      "GETUSERCONVERSATIONS_FUNCTION_NAME": "dev-GetUserConversations",
      "LCPLLMRESPONSE_FUNCTION_NAME": "dev-LCPLlmResponse",
      "LOGINUSER_FUNCTION_NAME": "dev-LoginUser",
      "ORGANIZATIONS_CRUD_FUNCTION_NAME": "dev-Organizations-Crud",
      "ORGANIZATIONS_MEMBERS_FUNCTION_NAME": "dev-Organizations-Members"
     }
    },
    "FunctionName": "dev-ParseEvent",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "ParseEventFunctionServiceRoleF8D3EAE8",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "ParseEventFunctionServiceRoleDefaultPolicy57F7AC66",
    "ParseEventFunctionServiceRoleF8D3EAE8"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ParseEventFunction/Resource",
    "aws:asset:path": "asset.da34e10f08cf6eb65ae8cc02780811bc593ac2e511af7bc7d63932e719e67817",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ParseEventFunctionLogGroup0D812E71": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ParseEventFunction3795DCE1"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ParseEventFunction/LogGroup/Resource"
   }
  },
  "ProcessSQSQueuedEmailsFunctionServiceRole3C42BF5C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Process-SQS-Queued-EmailsFunction/ServiceRole/Resource"
   }
  },
  "ProcessSQSQueuedEmailsFunctionServiceRoleDefaultPolicy7D29642C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ProcessSQSQueuedEmailsFunctionServiceRoleDefaultPolicy7D29642C",
    "Roles": [
     {
      "Ref": "ProcessSQSQueuedEmailsFunctionServiceRole3C42BF5C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Process-SQS-Queued-EmailsFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ProcessSQSQueuedEmailsFunction1F1D3827": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "6425e3e71aa7dcf9734a918cf4b200aecc5647d67d3928b9e0ae4ea78611af61.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase",
      "GENERATEEMAIL_FUNCTION_NAME": "dev-GenerateEmail",
      "GENERATEEV_FUNCTION_NAME": "dev-GenerateEV",
      "GET_CORS_FUNCTION_NAME": "dev-Get-Cors",
      "GETTHREADATTRS_FUNCTION_NAME": "dev-getThreadAttrs",
      "GETUSERCONVERSATIONS_FUNCTION_NAME": "dev-GetUserConversations",
      "LCPLLMRESPONSE_FUNCTION_NAME": "dev-LCPLlmResponse",
      "LOGINUSER_FUNCTION_NAME": "dev-LoginUser",
      "ORGANIZATIONS_CRUD_FUNCTION_NAME": "dev-Organizations-Crud",
      "ORGANIZATIONS_MEMBERS_FUNCTION_NAME": "dev-Organizations-Members",
      "PARSEEVENT_FUNCTION_NAME": "dev-ParseEvent"
     }
    },
    "FunctionName": "dev-Process-SQS-Queued-Emails",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "ProcessSQSQueuedEmailsFunctionServiceRole3C42BF5C",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "ProcessSQSQueuedEmailsFunctionServiceRoleDefaultPolicy7D29642C",
    "ProcessSQSQueuedEmailsFunctionServiceRole3C42BF5C"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Process-SQS-Queued-EmailsFunction/Resource",
    "aws:asset:path": "asset.6425e3e71aa7dcf9734a918cf4b200aecc5647d67d3928b9e0ae4ea78611af61",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ProcessSQSQueuedEmailsFunctionLogGroup9B3BF5A1": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ProcessSQSQueuedEmailsFunction1F1D3827"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Process-SQS-Queued-EmailsFunction/LogGroup/Resource"
   }
  },
  "ProcessNewUserSupabaseFunctionServiceRole1CBFCF48": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ProcessNewUserSupabaseFunction/ServiceRole/Resource"
   }
  },
  "ProcessNewUserSupabaseFunctionServiceRoleDefaultPolicyB180236E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ProcessNewUserSupabaseFunctionServiceRoleDefaultPolicyB180236E",
    "Roles": [
     {
      "Ref": "ProcessNewUserSupabaseFunctionServiceRole1CBFCF48"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ProcessNewUserSupabaseFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ProcessNewUserSupabaseFunction2982DD26": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "1fda529581499fc50365c40a1738a2bac02d48ce561923ac9486016cae0eedb6.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase",
      "GENERATEEMAIL_FUNCTION_NAME": "dev-GenerateEmail",
      "GENERATEEV_FUNCTION_NAME": "dev-GenerateEV",
      "GET_CORS_FUNCTION_NAME": "dev-Get-Cors",
      "GETTHREADATTRS_FUNCTION_NAME": "dev-getThreadAttrs",
      "GETUSERCONVERSATIONS_FUNCTION_NAME": "dev-GetUserConversations",
      "LCPLLMRESPONSE_FUNCTION_NAME": "dev-LCPLlmResponse",
      "LOGINUSER_FUNCTION_NAME": "dev-LoginUser",
      "ORGANIZATIONS_CRUD_FUNCTION_NAME": "dev-Organizations-Crud",
      "ORGANIZATIONS_MEMBERS_FUNCTION_NAME": "dev-Organizations-Members",
      "PARSEEVENT_FUNCTION_NAME": "dev-ParseEvent",
      "PROCESS_SQS_QUEUED_EMAILS_FUNCTION_NAME": "dev-Process-SQS-Queued-Emails"
     }
    },
    "FunctionName": "dev-ProcessNewUserSupabase",
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "ProcessNewUserSupabaseFunctionServiceRole1CBFCF48",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 60
   },
   "DependsOn": [
    "ProcessNewUserSupabaseFunctionServiceRoleDefaultPolicyB180236E",
    "ProcessNewUserSupabaseFunctionServiceRole1CBFCF48"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ProcessNewUserSupabaseFunction/Resource",
    "aws:asset:path": "asset.1fda529581499fc50365c40a1738a2bac02d48ce561923ac9486016cae0eedb6",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ProcessNewUserSupabaseFunctionLogGroup18FD6255": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ProcessNewUserSupabaseFunction2982DD26"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ProcessNewUserSupabaseFunction/LogGroup/Resource"
   }
  },
  "RateLimitAIFunctionServiceRole78F58F90": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/RateLimitAIFunction/ServiceRole/Resource"
   }
  },
  "RateLimitAIFunctionServiceRoleDefaultPolicy34DA06AF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RateLimitAIFunctionServiceRoleDefaultPolicy34DA06AF",
    "Roles": [
     {
      "Ref": "RateLimitAIFunctionServiceRole78F58F90"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/RateLimitAIFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "RateLimitAIFunction2732CE5C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "cc890be28a8a8506367201a310e91637eb24a5046daa4bf5d71710f02acc57fb.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase",
      "GENERATEEMAIL_FUNCTION_NAME": "dev-GenerateEmail",
      "GENERATEEV_FUNCTION_NAME": "dev-GenerateEV",
      "GET_CORS_FUNCTION_NAME": "dev-Get-Cors",
      "GETTHREADATTRS_FUNCTION_NAME": "dev-getThreadAttrs",
      "GETUSERCONVERSATIONS_FUNCTION_NAME": "dev-GetUserConversations",
      "LCPLLMRESPONSE_FUNCTION_NAME": "dev-LCPLlmResponse",
      "LOGINUSER_FUNCTION_NAME": "dev-LoginUser",
      "ORGANIZATIONS_CRUD_FUNCTION_NAME": "dev-Organizations-Crud",
      "ORGANIZATIONS_MEMBERS_FUNCTION_NAME": "dev-Organizations-Members",
      "PARSEEVENT_FUNCTION_NAME": "dev-ParseEvent",
      "PROCESS_SQS_QUEUED_EMAILS_FUNCTION_NAME": "dev-Process-SQS-Queued-Emails",
      "PROCESSNEWUSERSUPABASE_FUNCTION_NAME": "dev-ProcessNewUserSupabase"
     }
    },
    "FunctionName": "dev-RateLimitAI",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "RateLimitAIFunctionServiceRole78F58F90",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "RateLimitAIFunctionServiceRoleDefaultPolicy34DA06AF",
    "RateLimitAIFunctionServiceRole78F58F90"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/RateLimitAIFunction/Resource",
    "aws:asset:path": "asset.cc890be28a8a8506367201a310e91637eb24a5046daa4bf5d71710f02acc57fb",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "RateLimitAIFunctionLogGroup4CF57C55": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "RateLimitAIFunction2732CE5C"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/RateLimitAIFunction/LogGroup/Resource"
   }
  },
  "RateLimitAWSFunctionServiceRole19796370": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/RateLimitAWSFunction/ServiceRole/Resource"
   }
  },
  "RateLimitAWSFunctionServiceRoleDefaultPolicyD99E6984": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RateLimitAWSFunctionServiceRoleDefaultPolicyD99E6984",
    "Roles": [
     {
      "Ref": "RateLimitAWSFunctionServiceRole19796370"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/RateLimitAWSFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "RateLimitAWSFunctionCAFEA2B5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "980b4dccb82bb9b8e1ac6899d05a508fde98853738864dd4a8491548d1be05a4.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase",
      "GENERATEEMAIL_FUNCTION_NAME": "dev-GenerateEmail",
      "GENERATEEV_FUNCTION_NAME": "dev-GenerateEV",
      "GET_CORS_FUNCTION_NAME": "dev-Get-Cors",
      "GETTHREADATTRS_FUNCTION_NAME": "dev-getThreadAttrs",
      "GETUSERCONVERSATIONS_FUNCTION_NAME": "dev-GetUserConversations",
      "LCPLLMRESPONSE_FUNCTION_NAME": "dev-LCPLlmResponse",
      "LOGINUSER_FUNCTION_NAME": "dev-LoginUser",
      "ORGANIZATIONS_CRUD_FUNCTION_NAME": "dev-Organizations-Crud",
      "ORGANIZATIONS_MEMBERS_FUNCTION_NAME": "dev-Organizations-Members",
      "PARSEEVENT_FUNCTION_NAME": "dev-ParseEvent",
      "PROCESS_SQS_QUEUED_EMAILS_FUNCTION_NAME": "dev-Process-SQS-Queued-Emails",
      "PROCESSNEWUSERSUPABASE_FUNCTION_NAME": "dev-ProcessNewUserSupabase",
      "RATELIMITAI_FUNCTION_NAME": "dev-RateLimitAI"
     }
    },
    "FunctionName": "dev-RateLimitAWS",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "RateLimitAWSFunctionServiceRole19796370",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "RateLimitAWSFunctionServiceRoleDefaultPolicyD99E6984",
    "RateLimitAWSFunctionServiceRole19796370"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/RateLimitAWSFunction/Resource",
    "aws:asset:path": "asset.980b4dccb82bb9b8e1ac6899d05a508fde98853738864dd4a8491548d1be05a4",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "RateLimitAWSFunctionLogGroupA0BBC550": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "RateLimitAWSFunctionCAFEA2B5"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/RateLimitAWSFunction/LogGroup/Resource"
   }
  },
  "RetrieveThreadInformationFunctionServiceRoleF5AAEABF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Retrieve-Thread-InformationFunction/ServiceRole/Resource"
   }
  },
  "RetrieveThreadInformationFunctionServiceRoleDefaultPolicy1C747499": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RetrieveThreadInformationFunctionServiceRoleDefaultPolicy1C747499",
    "Roles": [
     {
      "Ref": "RetrieveThreadInformationFunctionServiceRoleF5AAEABF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Retrieve-Thread-InformationFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "RetrieveThreadInformationFunction0A415CE1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "bfb93a5f5b5bc564220730eb94471e283b359103bd277c34aac3d20d82ffab8f.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase",
      "GENERATEEMAIL_FUNCTION_NAME": "dev-GenerateEmail",
      "GENERATEEV_FUNCTION_NAME": "dev-GenerateEV",
      "GET_CORS_FUNCTION_NAME": "dev-Get-Cors",
      "GETTHREADATTRS_FUNCTION_NAME": "dev-getThreadAttrs",
      "GETUSERCONVERSATIONS_FUNCTION_NAME": "dev-GetUserConversations",
      "LCPLLMRESPONSE_FUNCTION_NAME": "dev-LCPLlmResponse",
      "LOGINUSER_FUNCTION_NAME": "dev-LoginUser",
      "ORGANIZATIONS_CRUD_FUNCTION_NAME": "dev-Organizations-Crud",
      "ORGANIZATIONS_MEMBERS_FUNCTION_NAME": "dev-Organizations-Members",
      "PARSEEVENT_FUNCTION_NAME": "dev-ParseEvent",
      "PROCESS_SQS_QUEUED_EMAILS_FUNCTION_NAME": "dev-Process-SQS-Queued-Emails",
      "PROCESSNEWUSERSUPABASE_FUNCTION_NAME": "dev-ProcessNewUserSupabase",
      "RATELIMITAI_FUNCTION_NAME": "dev-RateLimitAI",
      "RATELIMITAWS_FUNCTION_NAME": "dev-RateLimitAWS"
     }
    },
    "FunctionName": "dev-Retrieve-Thread-Information",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "RetrieveThreadInformationFunctionServiceRoleF5AAEABF",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "RetrieveThreadInformationFunctionServiceRoleDefaultPolicy1C747499",
    "RetrieveThreadInformationFunctionServiceRoleF5AAEABF"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Retrieve-Thread-InformationFunction/Resource",
    "aws:asset:path": "asset.bfb93a5f5b5bc564220730eb94471e283b359103bd277c34aac3d20d82ffab8f",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "RetrieveThreadInformationFunctionLogGroupCB3DF694": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "RetrieveThreadInformationFunction0A415CE1"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Retrieve-Thread-InformationFunction/LogGroup/Resource"
   }
  },
  "SendEmailFunctionServiceRole21F8C72B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Send-EmailFunction/ServiceRole/Resource"
   }
  },
  "SendEmailFunctionServiceRoleDefaultPolicy47BC508E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SendEmailFunctionServiceRoleDefaultPolicy47BC508E",
    "Roles": [
     {
      "Ref": "SendEmailFunctionServiceRole21F8C72B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Send-EmailFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "SendEmailFunction95820EF7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "36d9bde8b10be5f523228b309e7f0a9b7fa86cfe968f59ea0248d5adb66aa039.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase",
      "GENERATEEMAIL_FUNCTION_NAME": "dev-GenerateEmail",
      "GENERATEEV_FUNCTION_NAME": "dev-GenerateEV",
      "GET_CORS_FUNCTION_NAME": "dev-Get-Cors",
      "GETTHREADATTRS_FUNCTION_NAME": "dev-getThreadAttrs",
      "GETUSERCONVERSATIONS_FUNCTION_NAME": "dev-GetUserConversations",
      "LCPLLMRESPONSE_FUNCTION_NAME": "dev-LCPLlmResponse",
      "LOGINUSER_FUNCTION_NAME": "dev-LoginUser",
      "ORGANIZATIONS_CRUD_FUNCTION_NAME": "dev-Organizations-Crud",
      "ORGANIZATIONS_MEMBERS_FUNCTION_NAME": "dev-Organizations-Members",
      "PARSEEVENT_FUNCTION_NAME": "dev-ParseEvent",
      "PROCESS_SQS_QUEUED_EMAILS_FUNCTION_NAME": "dev-Process-SQS-Queued-Emails",
      "PROCESSNEWUSERSUPABASE_FUNCTION_NAME": "dev-ProcessNewUserSupabase",
      "RATELIMITAI_FUNCTION_NAME": "dev-RateLimitAI",
      "RATELIMITAWS_FUNCTION_NAME": "dev-RateLimitAWS",
      "RETRIEVE_THREAD_INFORMATION_FUNCTION_NAME": "dev-Retrieve-Thread-Information"
     }
    },
    "FunctionName": "dev-Send-Email",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "SendEmailFunctionServiceRole21F8C72B",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "SendEmailFunctionServiceRoleDefaultPolicy47BC508E",
    "SendEmailFunctionServiceRole21F8C72B"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Send-EmailFunction/Resource",
    "aws:asset:path": "asset.36d9bde8b10be5f523228b309e7f0a9b7fa86cfe968f59ea0248d5adb66aa039",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "SendEmailFunctionLogGroup82BFFE3E": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "SendEmailFunction95820EF7"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Send-EmailFunction/LogGroup/Resource"
   }
  },
  "TestSchedulerFunctionServiceRole314F3B35": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Test-SchedulerFunction/ServiceRole/Resource"
   }
  },
  "TestSchedulerFunctionServiceRoleDefaultPolicy76878BBC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "TestSchedulerFunctionServiceRoleDefaultPolicy76878BBC",
    "Roles": [
     {
      "Ref": "TestSchedulerFunctionServiceRole314F3B35"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Test-SchedulerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "TestSchedulerFunction66A427F5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "537c2cb33d17c7cc8239afab53055df9eb49d96f21d64f50c622219e3fd1ccb1.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase",
      "GENERATEEMAIL_FUNCTION_NAME": "dev-GenerateEmail",
      "GENERATEEV_FUNCTION_NAME": "dev-GenerateEV",
      "GET_CORS_FUNCTION_NAME": "dev-Get-Cors",
      "GETTHREADATTRS_FUNCTION_NAME": "dev-getThreadAttrs",
      "GETUSERCONVERSATIONS_FUNCTION_NAME": "dev-GetUserConversations",
      "LCPLLMRESPONSE_FUNCTION_NAME": "dev-LCPLlmResponse",
      "LOGINUSER_FUNCTION_NAME": "dev-LoginUser",
      "ORGANIZATIONS_CRUD_FUNCTION_NAME": "dev-Organizations-Crud",
      "ORGANIZATIONS_MEMBERS_FUNCTION_NAME": "dev-Organizations-Members",
      "PARSEEVENT_FUNCTION_NAME": "dev-ParseEvent",
      "PROCESS_SQS_QUEUED_EMAILS_FUNCTION_NAME": "dev-Process-SQS-Queued-Emails",
      "PROCESSNEWUSERSUPABASE_FUNCTION_NAME": "dev-ProcessNewUserSupabase",
      "RATELIMITAI_FUNCTION_NAME": "dev-RateLimitAI",
      "RATELIMITAWS_FUNCTION_NAME": "dev-RateLimitAWS",
      "RETRIEVE_THREAD_INFORMATION_FUNCTION_NAME": "dev-Retrieve-Thread-Information",
      "SEND_EMAIL_FUNCTION_NAME": "dev-Send-Email"
     }
    },
    "FunctionName": "dev-Test-Scheduler",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "TestSchedulerFunctionServiceRole314F3B35",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "TestSchedulerFunctionServiceRoleDefaultPolicy76878BBC",
    "TestSchedulerFunctionServiceRole314F3B35"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Test-SchedulerFunction/Resource",
    "aws:asset:path": "asset.537c2cb33d17c7cc8239afab53055df9eb49d96f21d64f50c622219e3fd1ccb1",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "TestSchedulerFunctionLogGroupB1305D2B": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "TestSchedulerFunction66A427F5"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/Test-SchedulerFunction/LogGroup/Resource"
   }
  },
  "utilsFunctionServiceRole3E4DF516": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/utilsFunction/ServiceRole/Resource"
   }
  },
  "utilsFunctionServiceRoleDefaultPolicyD7886D90": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "utilsFunctionServiceRoleDefaultPolicyD7886D90",
    "Roles": [
     {
      "Ref": "utilsFunctionServiceRole3E4DF516"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/utilsFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "utilsFunctionA4457D67": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "23e8ba92ec920c9c82a8c81e92fa0d090de127524e4dceb88d1630ad25763b9c.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase",
      "GENERATEEMAIL_FUNCTION_NAME": "dev-GenerateEmail",
      "GENERATEEV_FUNCTION_NAME": "dev-GenerateEV",
      "GET_CORS_FUNCTION_NAME": "dev-Get-Cors",
      "GETTHREADATTRS_FUNCTION_NAME": "dev-getThreadAttrs",
      "GETUSERCONVERSATIONS_FUNCTION_NAME": "dev-GetUserConversations",
      "LCPLLMRESPONSE_FUNCTION_NAME": "dev-LCPLlmResponse",
      "LOGINUSER_FUNCTION_NAME": "dev-LoginUser",
      "ORGANIZATIONS_CRUD_FUNCTION_NAME": "dev-Organizations-Crud",
      "ORGANIZATIONS_MEMBERS_FUNCTION_NAME": "dev-Organizations-Members",
      "PARSEEVENT_FUNCTION_NAME": "dev-ParseEvent",
      "PROCESS_SQS_QUEUED_EMAILS_FUNCTION_NAME": "dev-Process-SQS-Queued-Emails",
      "PROCESSNEWUSERSUPABASE_FUNCTION_NAME": "dev-ProcessNewUserSupabase",
      "RATELIMITAI_FUNCTION_NAME": "dev-RateLimitAI",
      "RATELIMITAWS_FUNCTION_NAME": "dev-RateLimitAWS",
      "RETRIEVE_THREAD_INFORMATION_FUNCTION_NAME": "dev-Retrieve-Thread-Information",
      "SEND_EMAIL_FUNCTION_NAME": "dev-Send-Email",
      "TEST_SCHEDULER_FUNCTION_NAME": "dev-Test-Scheduler"
     }
    },
    "FunctionName": "dev-utils",
    "Handler": "arn-resolver.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "utilsFunctionServiceRole3E4DF516",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 60
   },
   "DependsOn": [
    "utilsFunctionServiceRoleDefaultPolicyD7886D90",
    "utilsFunctionServiceRole3E4DF516"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/utilsFunction/Resource",
    "aws:asset:path": "asset.23e8ba92ec920c9c82a8c81e92fa0d090de127524e4dceb88d1630ad25763b9c",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "utilsFunctionLogGroupDCC24555": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "utilsFunctionA4457D67"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/utilsFunction/LogGroup/Resource"
   }
  },
  "verifyNewDomainValidFunctionServiceRole7BF586F3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/verifyNewDomainValidFunction/ServiceRole/Resource"
   }
  },
  "verifyNewDomainValidFunctionServiceRoleDefaultPolicyB97EAC1B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "UserPool6BA7E5F2",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationsTableCD91EB96",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "OrganizationsTable01047E98",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "RateLimitingTable259308DF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "ThreadsTable1D5C607C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "EmailProcessQueue10E28519",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailAttachmentsBucket56FB991A",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailAttachmentsBucket56FB991A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "verifyNewDomainValidFunctionServiceRoleDefaultPolicyB97EAC1B",
    "Roles": [
     {
      "Ref": "verifyNewDomainValidFunctionServiceRole7BF586F3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/verifyNewDomainValidFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "verifyNewDomainValidFunction9AA58C80": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-872515253712-us-west-1",
     "S3Key": "9b8a0919fcde62d5d9abc4c7e7625a3d425abdc11f3d57635524cd3b2da15954.zip"
    },
    "Environment": {
     "Variables": {
      "STAGE": "dev",
      "AWS_ACCOUNT_ID": "872515253712",
      "CDK_AWS_REGION": "us-west-1",
      "AUTH_BP": "xkirxcJV3gCa38",
      "BUCKET_NAME": "xkirxcJV3gCa38",
      "DB_SELECT_LAMBDA": "dev-DBSelect",
      "GENERATE_EV_LAMBDA_ARN": "dev-GenerateEV",
      "PROCESSING_LAMBDA_ARN": "dev-Send-Email",
      "QUEUE_URL": {
       "Ref": "EmailProcessQueue10E28519"
      },
      "SCHEDULER_ROLE_ARN": "arn:aws:iam::872515253712:role/SQS-SES-Handler",
      "TAI_KEY": "2e1a1e910693ae18c09ad0585a7645e0f4595e90ec35bb366b6f5520221b6ca7",
      "BEDROCK_MODEL_ARN": "arn:aws:bedrock:us-west-2::model/amazon.nova-premier-v1:0",
      "COGNITO_USER_POOL_ID": {
       "Ref": "UserPool6BA7E5F2"
      },
      "COGNITO_CLIENT_ID": {
       "Ref": "UserPoolClient2F5918F7"
      },
      "COGNITO_CLIENT_SECRET": {
       "Fn::GetAtt": [
        "UserPoolClientDescribeCognitoUserPoolClient19F18FF0",
        "UserPoolClient.ClientSecret"
       ]
      },
      "RATE_LIMIT_AI": "100",
      "RATE_LIMIT_AWS": "1000",
      "RECAPTCHA_SECRET_KEY": "6LcdgD8rAAAAAMBJ_aCebuY5e_F-IfZjL-oAs9lo",
      "USERS_TABLE": {
       "Ref": "UsersTable9725E9C8"
      },
      "CONVERSATIONS_TABLE": {
       "Ref": "ConversationsTableCD91EB96"
      },
      "THREADS_TABLE": {
       "Ref": "ThreadsTable1D5C607C"
      },
      "ORGANIZATIONS_TABLE": {
       "Ref": "OrganizationsTable01047E98"
      },
      "RATE_LIMITING_TABLE": {
       "Ref": "RateLimitingTable259308DF"
      },
      "STORAGE_BUCKET": {
       "Ref": "StorageBucket19DB2FF8"
      },
      "EMAIL_ATTACHMENTS_BUCKET": {
       "Ref": "EmailAttachmentsBucket56FB991A"
      },
      "ALLOW_CORS_FUNCTION_NAME": "dev-Allow-Cors",
      "API_AUTHORIZER_FUNCTION_NAME": "dev-API-Authorizer",
      "AUTHORIZE_FUNCTION_NAME": "dev-Authorize",
      "CHECK_DOMAIN_STATUS_FUNCTION_NAME": "dev-Check-Domain-Status",
      "CREATE_SES_DKIM_RECORDS_FUNCTION_NAME": "dev-Create-SES-Dkim-Records",
      "CREATE_SES_IDENTITY_FUNCTION_NAME": "dev-Create-SES-Identity",
      "CREATENEWSESSION_FUNCTION_NAME": "dev-CreateNewSession",
      "DBBATCHSELECT_FUNCTION_NAME": "dev-DBBatchSelect",
      "DBDELETE_FUNCTION_NAME": "dev-DBDelete",
      "DBSELECT_FUNCTION_NAME": "dev-DBSelect",
      "DBUPDATE_FUNCTION_NAME": "dev-DBUpdate",
      "DELETEUSERSUPABASE_FUNCTION_NAME": "dev-DeleteUserSupabase",
      "GENERATEEMAIL_FUNCTION_NAME": "dev-GenerateEmail",
      "GENERATEEV_FUNCTION_NAME": "dev-GenerateEV",
      "GET_CORS_FUNCTION_NAME": "dev-Get-Cors",
      "GETTHREADATTRS_FUNCTION_NAME": "dev-getThreadAttrs",
      "GETUSERCONVERSATIONS_FUNCTION_NAME": "dev-GetUserConversations",
      "LCPLLMRESPONSE_FUNCTION_NAME": "dev-LCPLlmResponse",
      "LOGINUSER_FUNCTION_NAME": "dev-LoginUser",
      "ORGANIZATIONS_CRUD_FUNCTION_NAME": "dev-Organizations-Crud",
      "ORGANIZATIONS_MEMBERS_FUNCTION_NAME": "dev-Organizations-Members",
      "PARSEEVENT_FUNCTION_NAME": "dev-ParseEvent",
      "PROCESS_SQS_QUEUED_EMAILS_FUNCTION_NAME": "dev-Process-SQS-Queued-Emails",
      "PROCESSNEWUSERSUPABASE_FUNCTION_NAME": "dev-ProcessNewUserSupabase",
      "RATELIMITAI_FUNCTION_NAME": "dev-RateLimitAI",
      "RATELIMITAWS_FUNCTION_NAME": "dev-RateLimitAWS",
      "RETRIEVE_THREAD_INFORMATION_FUNCTION_NAME": "dev-Retrieve-Thread-Information",
      "SEND_EMAIL_FUNCTION_NAME": "dev-Send-Email",
      "TEST_SCHEDULER_FUNCTION_NAME": "dev-Test-Scheduler",
      "UTILS_FUNCTION_NAME": "dev-utils"
     }
    },
    "FunctionName": "dev-verifyNewDomainValid",
    "Handler": "lambda_function.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "verifyNewDomainValidFunctionServiceRole7BF586F3",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 60
   },
   "DependsOn": [
    "verifyNewDomainValidFunctionServiceRoleDefaultPolicyB97EAC1B",
    "verifyNewDomainValidFunctionServiceRole7BF586F3"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/verifyNewDomainValidFunction/Resource",
    "aws:asset:path": "asset.9b8a0919fcde62d5d9abc4c7e7625a3d425abdc11f3d57635524cd3b2da15954",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "verifyNewDomainValidFunctionLogGroup704CFDCE": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "verifyNewDomainValidFunction9AA58C80"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/verifyNewDomainValidFunction/LogGroup/Resource"
   }
  },
  "ApiGateway11E7F47B": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "ACS API Gateway for dev environment",
    "Name": "dev-ApiGateway"
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Resource"
   }
  },
  "ApiGatewayDeploymentA26796E8ed3ca13dda91acadc4a85771196e6e22": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "ACS API Gateway for dev environment",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "DependsOn": [
    "ApiGatewayapiauthauthorizeOPTIONSBE835974",
    "ApiGatewayapiauthauthorizePOST83BC3ADB",
    "ApiGatewayapiauthauthorize4495A9EB",
    "ApiGatewayapiauthcreatesessionOPTIONS12FEBF56",
    "ApiGatewayapiauthcreatesessionPOST78B9DE70",
    "ApiGatewayapiauthcreatesessionC9D7DC9C",
    "ApiGatewayapiauthloginOPTIONS1D6CCE16",
    "ApiGatewayapiauthloginPOST17E08A28",
    "ApiGatewayapiauthlogin8197054C",
    "ApiGatewayapiauthOPTIONS6C3BD7A8",
    "ApiGatewayapiauthC228EEA1",
    "ApiGatewayapiauthorizerOPTIONS3C43BAA7",
    "ApiGatewayapiauthorizerPOST31210CB4",
    "ApiGatewayapiauthorizerA3663BC5",
    "ApiGatewayapicorsgetGETABD03DED",
    "ApiGatewayapicorsgetOPTIONSBD1CE642",
    "ApiGatewayapicorsget11D4CCFC",
    "ApiGatewayapicorsOPTIONS3696FB7B",
    "ApiGatewayapicors259CBC91",
    "ApiGatewayapidbbatchselectOPTIONS01897D99",
    "ApiGatewayapidbbatchselectPOST5FFF3E66",
    "ApiGatewayapidbbatchselect2AE4B5B4",
    "ApiGatewayapidbdeleteOPTIONS86A65932",
    "ApiGatewayapidbdeletePOST4FCD5D4F",
    "ApiGatewayapidbdelete3A0FCAB8",
    "ApiGatewayapidbOPTIONS210A3634",
    "ApiGatewayapidb8AC11C9F",
    "ApiGatewayapidbselectOPTIONSB2779854",
    "ApiGatewayapidbselectPOST9F6BB044",
    "ApiGatewayapidbselect8B813CB0",
    "ApiGatewayapidbupdateOPTIONSC58DC117",
    "ApiGatewayapidbupdatePOST247FDD32",
    "ApiGatewayapidbupdate3B60D9CB",
    "ApiGatewayapiemailgenerateOPTIONS6BAC8F2B",
    "ApiGatewayapiemailgeneratePOST075F9C21",
    "ApiGatewayapiemailgenerate2C9218EB",
    "ApiGatewayapiemailOPTIONS57075724",
    "ApiGatewayapiemailprocessqueueOPTIONS4780822C",
    "ApiGatewayapiemailprocessqueuePOSTA6D34CBA",
    "ApiGatewayapiemailprocessqueue7EF27B37",
    "ApiGatewayapiemail3D45AE45",
    "ApiGatewayapiemailsendOPTIONSAECA0C24",
    "ApiGatewayapiemailsendPOST7298B03B",
    "ApiGatewayapiemailsend411C398E",
    "ApiGatewayapievgenerateOPTIONS5F37D3A0",
    "ApiGatewayapievgeneratePOSTE10F8CBD",
    "ApiGatewayapievgenerate8E068908",
    "ApiGatewayapievOPTIONS9E5BDB85",
    "ApiGatewayapiev998F6514",
    "ApiGatewayapillmOPTIONSFEC43832",
    "ApiGatewayapillmCA8DD34B",
    "ApiGatewayapillmresponseOPTIONSBD2851A1",
    "ApiGatewayapillmresponsePOSTBCC960D5",
    "ApiGatewayapillmresponse7E47346C",
    "ApiGatewayapiOPTIONSA7CF6F65",
    "ApiGatewayapiorganizationscrudOPTIONSEE822688",
    "ApiGatewayapiorganizationscrudPOSTDD1A5971",
    "ApiGatewayapiorganizationscrudBAC6FEA1",
    "ApiGatewayapiorganizationsmembersOPTIONSC2748E9B",
    "ApiGatewayapiorganizationsmembersPOST5659EA33",
    "ApiGatewayapiorganizationsmembers93EC0B7E",
    "ApiGatewayapiorganizationsOPTIONS130E7B8C",
    "ApiGatewayapiorganizations6264A445",
    "ApiGatewayapiparseeventOPTIONS9670419E",
    "ApiGatewayapiparseeventPOST07B83786",
    "ApiGatewayapiparseevent10D63FC9",
    "ApiGatewayapiratelimitaiOPTIONS37483AA4",
    "ApiGatewayapiratelimitaiPOST394A3E62",
    "ApiGatewayapiratelimitaiEBD274E4",
    "ApiGatewayapiratelimitawsOPTIONS5E836885",
    "ApiGatewayapiratelimitawsPOSTF6F1EC9C",
    "ApiGatewayapiratelimitaws89854A3B",
    "ApiGatewayapiratelimitOPTIONS61AC2C5F",
    "ApiGatewayapiratelimitF4921C8E",
    "ApiGatewayapiBD54C415",
    "ApiGatewayapisescheckdomainOPTIONS10F25FDC",
    "ApiGatewayapisescheckdomainPOST32F66696",
    "ApiGatewayapisescheckdomain58C2CF7D",
    "ApiGatewayapisescreatedkimOPTIONS46423C23",
    "ApiGatewayapisescreatedkimPOST20E13E76",
    "ApiGatewayapisescreatedkim69EE4032",
    "ApiGatewayapisescreateidentityOPTIONSBCD2D673",
    "ApiGatewayapisescreateidentityPOSTCF434FF1",
    "ApiGatewayapisescreateidentity8B7B6F58",
    "ApiGatewayapisesOPTIONS6E93D833",
    "ApiGatewayapises91DCF212",
    "ApiGatewayapisesverifydomainOPTIONS4FE3316C",
    "ApiGatewayapisesverifydomainPOST006D8780",
    "ApiGatewayapisesverifydomainC183E4F1",
    "ApiGatewayapitestschedulerOPTIONS62CC8BB9",
    "ApiGatewayapitestschedulerPOST6E0186D7",
    "ApiGatewayapitestscheduler2B265C1B",
    "ApiGatewayapithreadsgetallGET06443B20",
    "ApiGatewayapithreadsgetallOPTIONS3D6D0015",
    "ApiGatewayapithreadsgetallB425566E",
    "ApiGatewayapithreadsOPTIONS073161E3",
    "ApiGatewayapithreadsA4959447",
    "ApiGatewayapithreadsretrieveOPTIONSEB11C35C",
    "ApiGatewayapithreadsretrievePOST63EE3B79",
    "ApiGatewayapithreadsretrieve00E477BA",
    "ApiGatewayapiusersconversationsGET0D56F31C",
    "ApiGatewayapiusersconversationsOPTIONS86783C55",
    "ApiGatewayapiusersconversations11879819",
    "ApiGatewayapiusersdeleteDELETE9097F6A7",
    "ApiGatewayapiusersdeleteOPTIONS413E5559",
    "ApiGatewayapiusersdeleteC19794DF",
    "ApiGatewayapiusersOPTIONSA1E7ECC9",
    "ApiGatewayapiusersprocessOPTIONSA57976BF",
    "ApiGatewayapiusersprocessPOSTBFD5D700",
    "ApiGatewayapiusersprocess5161F8F8",
    "ApiGatewayapiusers7B4BB47E",
    "ApiGatewayOPTIONSFAD6DF6F"
   ],
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Deployment/Resource"
   }
  },
  "ApiGatewayDeploymentStageprod1C6D5CD6": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "ApiGatewayDeploymentA26796E8ed3ca13dda91acadc4a85771196e6e22"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/DeploymentStage.prod/Resource"
   }
  },
  "ApiGatewayOPTIONSFAD6DF6F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "ApiGateway11E7F47B",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiBD54C415": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ApiGateway11E7F47B",
      "RootResourceId"
     ]
    },
    "PathPart": "api",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/Resource"
   }
  },
  "ApiGatewayapiOPTIONSA7CF6F65": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiBD54C415"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiauthC228EEA1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiBD54C415"
    },
    "PathPart": "auth",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/auth/Resource"
   }
  },
  "ApiGatewayapiauthOPTIONS6C3BD7A8": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiauthC228EEA1"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/auth/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiauthlogin8197054C": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiauthC228EEA1"
    },
    "PathPart": "login",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/auth/login/Resource"
   }
  },
  "ApiGatewayapiauthloginOPTIONS1D6CCE16": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiauthlogin8197054C"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/auth/login/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiauthloginPOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapiauthlogin0D414F96": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LoginUserFunction917F38A7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/auth/login"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/auth/login/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.auth.login"
   }
  },
  "ApiGatewayapiauthloginPOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapiauthlogin50ADCAC2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LoginUserFunction917F38A7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/auth/login"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/auth/login/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.auth.login"
   }
  },
  "ApiGatewayapiauthloginPOST17E08A28": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "LoginUserFunction917F38A7",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapiauthlogin8197054C"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/auth/login/POST/Resource"
   }
  },
  "ApiGatewayapiauthauthorize4495A9EB": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiauthC228EEA1"
    },
    "PathPart": "authorize",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/auth/authorize/Resource"
   }
  },
  "ApiGatewayapiauthauthorizeOPTIONSBE835974": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiauthauthorize4495A9EB"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/auth/authorize/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiauthauthorizePOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapiauthauthorizeE9C4D8EE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthorizeFunctionC3F570CF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/auth/authorize"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/auth/authorize/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.auth.authorize"
   }
  },
  "ApiGatewayapiauthauthorizePOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapiauthauthorize69C2918C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AuthorizeFunctionC3F570CF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/auth/authorize"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/auth/authorize/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.auth.authorize"
   }
  },
  "ApiGatewayapiauthauthorizePOST83BC3ADB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AuthorizeFunctionC3F570CF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapiauthauthorize4495A9EB"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/auth/authorize/POST/Resource"
   }
  },
  "ApiGatewayapiauthcreatesessionC9D7DC9C": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiauthC228EEA1"
    },
    "PathPart": "create-session",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/auth/create-session/Resource"
   }
  },
  "ApiGatewayapiauthcreatesessionOPTIONS12FEBF56": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiauthcreatesessionC9D7DC9C"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/auth/create-session/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiauthcreatesessionPOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapiauthcreatesession63C225D0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateNewSessionFunction3F952E8F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/auth/create-session"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/auth/create-session/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.auth.create-session"
   }
  },
  "ApiGatewayapiauthcreatesessionPOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapiauthcreatesessionEB338425": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateNewSessionFunction3F952E8F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/auth/create-session"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/auth/create-session/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.auth.create-session"
   }
  },
  "ApiGatewayapiauthcreatesessionPOST78B9DE70": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CreateNewSessionFunction3F952E8F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapiauthcreatesessionC9D7DC9C"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/auth/create-session/POST/Resource"
   }
  },
  "ApiGatewayapiusers7B4BB47E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiBD54C415"
    },
    "PathPart": "users",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/users/Resource"
   }
  },
  "ApiGatewayapiusersOPTIONSA1E7ECC9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiusers7B4BB47E"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/users/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiusersdeleteC19794DF": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiusers7B4BB47E"
    },
    "PathPart": "delete",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/users/delete/Resource"
   }
  },
  "ApiGatewayapiusersdeleteOPTIONS413E5559": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiusersdeleteC19794DF"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/users/delete/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiusersdeleteDELETEApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1DELETEapiusersdelete02A2901B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteUserSupabaseFunctionC89CDFE6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/DELETE/api/users/delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/users/delete/DELETE/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.DELETE..api.users.delete"
   }
  },
  "ApiGatewayapiusersdeleteDELETEApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1DELETEapiusersdelete719B26C0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteUserSupabaseFunctionC89CDFE6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/DELETE/api/users/delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/users/delete/DELETE/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.DELETE..api.users.delete"
   }
  },
  "ApiGatewayapiusersdeleteDELETE9097F6A7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DeleteUserSupabaseFunctionC89CDFE6",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapiusersdeleteC19794DF"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/users/delete/DELETE/Resource"
   }
  },
  "ApiGatewayapiusersprocess5161F8F8": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiusers7B4BB47E"
    },
    "PathPart": "process",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/users/process/Resource"
   }
  },
  "ApiGatewayapiusersprocessOPTIONSA57976BF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiusersprocess5161F8F8"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/users/process/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiusersprocessPOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapiusersprocess41B14545": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ProcessNewUserSupabaseFunction2982DD26",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/users/process"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/users/process/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.users.process"
   }
  },
  "ApiGatewayapiusersprocessPOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapiusersprocessFFE2A810": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ProcessNewUserSupabaseFunction2982DD26",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/users/process"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/users/process/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.users.process"
   }
  },
  "ApiGatewayapiusersprocessPOSTBFD5D700": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ProcessNewUserSupabaseFunction2982DD26",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapiusersprocess5161F8F8"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/users/process/POST/Resource"
   }
  },
  "ApiGatewayapiusersconversations11879819": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiusers7B4BB47E"
    },
    "PathPart": "conversations",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/users/conversations/Resource"
   }
  },
  "ApiGatewayapiusersconversationsOPTIONS86783C55": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiusersconversations11879819"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/users/conversations/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiusersconversationsGETApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1GETapiusersconversations8A78D74C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetUserConversationsFunction8BC8F605",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/GET/api/users/conversations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/users/conversations/GET/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.GET..api.users.conversations"
   }
  },
  "ApiGatewayapiusersconversationsGETApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1GETapiusersconversations31782D73": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetUserConversationsFunction8BC8F605",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/GET/api/users/conversations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/users/conversations/GET/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.GET..api.users.conversations"
   }
  },
  "ApiGatewayapiusersconversationsGET0D56F31C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetUserConversationsFunction8BC8F605",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapiusersconversations11879819"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/users/conversations/GET/Resource"
   }
  },
  "ApiGatewayapidb8AC11C9F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiBD54C415"
    },
    "PathPart": "db",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/Resource"
   }
  },
  "ApiGatewayapidbOPTIONS210A3634": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapidb8AC11C9F"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/OPTIONS/Resource"
   }
  },
  "ApiGatewayapidbselect8B813CB0": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapidb8AC11C9F"
    },
    "PathPart": "select",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/select/Resource"
   }
  },
  "ApiGatewayapidbselectOPTIONSB2779854": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapidbselect8B813CB0"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/select/OPTIONS/Resource"
   }
  },
  "ApiGatewayapidbselectPOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapidbselect158E1DDD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DBSelectFunction22A0CACB",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/db/select"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/select/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.db.select"
   }
  },
  "ApiGatewayapidbselectPOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapidbselect40245CFD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DBSelectFunction22A0CACB",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/db/select"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/select/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.db.select"
   }
  },
  "ApiGatewayapidbselectPOST9F6BB044": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DBSelectFunction22A0CACB",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapidbselect8B813CB0"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/select/POST/Resource"
   }
  },
  "ApiGatewayapidbbatchselect2AE4B5B4": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapidb8AC11C9F"
    },
    "PathPart": "batch-select",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/batch-select/Resource"
   }
  },
  "ApiGatewayapidbbatchselectOPTIONS01897D99": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapidbbatchselect2AE4B5B4"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/batch-select/OPTIONS/Resource"
   }
  },
  "ApiGatewayapidbbatchselectPOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapidbbatchselectFE6AE2C1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DBBatchSelectFunction4B2FD1A1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/db/batch-select"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/batch-select/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.db.batch-select"
   }
  },
  "ApiGatewayapidbbatchselectPOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapidbbatchselectAC82FE62": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DBBatchSelectFunction4B2FD1A1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/db/batch-select"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/batch-select/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.db.batch-select"
   }
  },
  "ApiGatewayapidbbatchselectPOST5FFF3E66": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DBBatchSelectFunction4B2FD1A1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapidbbatchselect2AE4B5B4"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/batch-select/POST/Resource"
   }
  },
  "ApiGatewayapidbupdate3B60D9CB": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapidb8AC11C9F"
    },
    "PathPart": "update",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/update/Resource"
   }
  },
  "ApiGatewayapidbupdateOPTIONSC58DC117": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapidbupdate3B60D9CB"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/update/OPTIONS/Resource"
   }
  },
  "ApiGatewayapidbupdatePOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapidbupdateCCC34459": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DBUpdateFunctionA839F286",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/db/update"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/update/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.db.update"
   }
  },
  "ApiGatewayapidbupdatePOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapidbupdate200025D4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DBUpdateFunctionA839F286",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/db/update"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/update/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.db.update"
   }
  },
  "ApiGatewayapidbupdatePOST247FDD32": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DBUpdateFunctionA839F286",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapidbupdate3B60D9CB"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/update/POST/Resource"
   }
  },
  "ApiGatewayapidbdelete3A0FCAB8": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapidb8AC11C9F"
    },
    "PathPart": "delete",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/delete/Resource"
   }
  },
  "ApiGatewayapidbdeleteOPTIONS86A65932": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapidbdelete3A0FCAB8"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/delete/OPTIONS/Resource"
   }
  },
  "ApiGatewayapidbdeletePOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapidbdelete596CACF3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DBDeleteFunction9588707C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/db/delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/delete/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.db.delete"
   }
  },
  "ApiGatewayapidbdeletePOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapidbdelete6AE406F3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DBDeleteFunction9588707C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/db/delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/delete/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.db.delete"
   }
  },
  "ApiGatewayapidbdeletePOST4FCD5D4F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DBDeleteFunction9588707C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapidbdelete3A0FCAB8"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/db/delete/POST/Resource"
   }
  },
  "ApiGatewayapiemail3D45AE45": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiBD54C415"
    },
    "PathPart": "email",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/email/Resource"
   }
  },
  "ApiGatewayapiemailOPTIONS57075724": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiemail3D45AE45"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/email/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiemailgenerate2C9218EB": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiemail3D45AE45"
    },
    "PathPart": "generate",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/email/generate/Resource"
   }
  },
  "ApiGatewayapiemailgenerateOPTIONS6BAC8F2B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiemailgenerate2C9218EB"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/email/generate/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiemailgeneratePOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapiemailgenerate79286B53": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GenerateEmailFunctionCF0EFEE5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/email/generate"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/email/generate/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.email.generate"
   }
  },
  "ApiGatewayapiemailgeneratePOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapiemailgenerate14FDD2B5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GenerateEmailFunctionCF0EFEE5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/email/generate"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/email/generate/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.email.generate"
   }
  },
  "ApiGatewayapiemailgeneratePOST075F9C21": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GenerateEmailFunctionCF0EFEE5",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapiemailgenerate2C9218EB"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/email/generate/POST/Resource"
   }
  },
  "ApiGatewayapiemailsend411C398E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiemail3D45AE45"
    },
    "PathPart": "send",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/email/send/Resource"
   }
  },
  "ApiGatewayapiemailsendOPTIONSAECA0C24": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiemailsend411C398E"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/email/send/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiemailsendPOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapiemailsendFFBDEB6F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SendEmailFunction95820EF7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/email/send"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/email/send/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.email.send"
   }
  },
  "ApiGatewayapiemailsendPOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapiemailsendA7F63EE7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SendEmailFunction95820EF7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/email/send"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/email/send/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.email.send"
   }
  },
  "ApiGatewayapiemailsendPOST7298B03B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "SendEmailFunction95820EF7",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapiemailsend411C398E"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/email/send/POST/Resource"
   }
  },
  "ApiGatewayapiemailprocessqueue7EF27B37": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiemail3D45AE45"
    },
    "PathPart": "process-queue",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/email/process-queue/Resource"
   }
  },
  "ApiGatewayapiemailprocessqueueOPTIONS4780822C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiemailprocessqueue7EF27B37"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/email/process-queue/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiemailprocessqueuePOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapiemailprocessqueueF559E835": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ProcessSQSQueuedEmailsFunction1F1D3827",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/email/process-queue"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/email/process-queue/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.email.process-queue"
   }
  },
  "ApiGatewayapiemailprocessqueuePOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapiemailprocessqueue8301D3C6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ProcessSQSQueuedEmailsFunction1F1D3827",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/email/process-queue"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/email/process-queue/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.email.process-queue"
   }
  },
  "ApiGatewayapiemailprocessqueuePOSTA6D34CBA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ProcessSQSQueuedEmailsFunction1F1D3827",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapiemailprocessqueue7EF27B37"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/email/process-queue/POST/Resource"
   }
  },
  "ApiGatewayapiev998F6514": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiBD54C415"
    },
    "PathPart": "ev",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ev/Resource"
   }
  },
  "ApiGatewayapievOPTIONS9E5BDB85": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiev998F6514"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ev/OPTIONS/Resource"
   }
  },
  "ApiGatewayapievgenerate8E068908": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiev998F6514"
    },
    "PathPart": "generate",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ev/generate/Resource"
   }
  },
  "ApiGatewayapievgenerateOPTIONS5F37D3A0": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapievgenerate8E068908"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ev/generate/OPTIONS/Resource"
   }
  },
  "ApiGatewayapievgeneratePOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapievgenerateFB9E2127": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GenerateEVFunctionC42A9082",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/ev/generate"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ev/generate/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.ev.generate"
   }
  },
  "ApiGatewayapievgeneratePOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapievgenerate4B9D18B6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GenerateEVFunctionC42A9082",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/ev/generate"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ev/generate/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.ev.generate"
   }
  },
  "ApiGatewayapievgeneratePOSTE10F8CBD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GenerateEVFunctionC42A9082",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapievgenerate8E068908"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ev/generate/POST/Resource"
   }
  },
  "ApiGatewayapillmCA8DD34B": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiBD54C415"
    },
    "PathPart": "llm",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/llm/Resource"
   }
  },
  "ApiGatewayapillmOPTIONSFEC43832": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapillmCA8DD34B"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/llm/OPTIONS/Resource"
   }
  },
  "ApiGatewayapillmresponse7E47346C": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapillmCA8DD34B"
    },
    "PathPart": "response",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/llm/response/Resource"
   }
  },
  "ApiGatewayapillmresponseOPTIONSBD2851A1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapillmresponse7E47346C"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/llm/response/OPTIONS/Resource"
   }
  },
  "ApiGatewayapillmresponsePOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapillmresponse84B15ED4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LCPLlmResponseFunctionF4F11285",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/llm/response"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/llm/response/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.llm.response"
   }
  },
  "ApiGatewayapillmresponsePOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapillmresponse1C1C6075": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LCPLlmResponseFunctionF4F11285",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/llm/response"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/llm/response/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.llm.response"
   }
  },
  "ApiGatewayapillmresponsePOSTBCC960D5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "LCPLlmResponseFunctionF4F11285",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapillmresponse7E47346C"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/llm/response/POST/Resource"
   }
  },
  "ApiGatewayapithreadsA4959447": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiBD54C415"
    },
    "PathPart": "threads",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/threads/Resource"
   }
  },
  "ApiGatewayapithreadsOPTIONS073161E3": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapithreadsA4959447"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/threads/OPTIONS/Resource"
   }
  },
  "ApiGatewayapithreadsgetallB425566E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapithreadsA4959447"
    },
    "PathPart": "get-all",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/threads/get-all/Resource"
   }
  },
  "ApiGatewayapithreadsgetallOPTIONS3D6D0015": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapithreadsgetallB425566E"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/threads/get-all/OPTIONS/Resource"
   }
  },
  "ApiGatewayapithreadsgetallGETApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1GETapithreadsgetallB12DC628": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getThreadAttrsFunctionB6F2A7CB",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/GET/api/threads/get-all"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/threads/get-all/GET/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.GET..api.threads.get-all"
   }
  },
  "ApiGatewayapithreadsgetallGETApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1GETapithreadsgetallB8A9AB96": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getThreadAttrsFunctionB6F2A7CB",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/GET/api/threads/get-all"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/threads/get-all/GET/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.GET..api.threads.get-all"
   }
  },
  "ApiGatewayapithreadsgetallGET06443B20": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "getThreadAttrsFunctionB6F2A7CB",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapithreadsgetallB425566E"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/threads/get-all/GET/Resource"
   }
  },
  "ApiGatewayapithreadsretrieve00E477BA": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapithreadsA4959447"
    },
    "PathPart": "retrieve",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/threads/retrieve/Resource"
   }
  },
  "ApiGatewayapithreadsretrieveOPTIONSEB11C35C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapithreadsretrieve00E477BA"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/threads/retrieve/OPTIONS/Resource"
   }
  },
  "ApiGatewayapithreadsretrievePOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapithreadsretrieve82808708": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RetrieveThreadInformationFunction0A415CE1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/threads/retrieve"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/threads/retrieve/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.threads.retrieve"
   }
  },
  "ApiGatewayapithreadsretrievePOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapithreadsretrieve6460003E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RetrieveThreadInformationFunction0A415CE1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/threads/retrieve"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/threads/retrieve/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.threads.retrieve"
   }
  },
  "ApiGatewayapithreadsretrievePOST63EE3B79": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "RetrieveThreadInformationFunction0A415CE1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapithreadsretrieve00E477BA"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/threads/retrieve/POST/Resource"
   }
  },
  "ApiGatewayapiorganizations6264A445": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiBD54C415"
    },
    "PathPart": "organizations",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/organizations/Resource"
   }
  },
  "ApiGatewayapiorganizationsOPTIONS130E7B8C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiorganizations6264A445"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/organizations/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiorganizationscrudBAC6FEA1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiorganizations6264A445"
    },
    "PathPart": "crud",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/organizations/crud/Resource"
   }
  },
  "ApiGatewayapiorganizationscrudOPTIONSEE822688": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiorganizationscrudBAC6FEA1"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/organizations/crud/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiorganizationscrudPOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapiorganizationscrud6A7B050E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OrganizationsCrudFunctionB7E9984C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/organizations/crud"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/organizations/crud/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.organizations.crud"
   }
  },
  "ApiGatewayapiorganizationscrudPOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapiorganizationscrud91EEE4DE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OrganizationsCrudFunctionB7E9984C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/organizations/crud"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/organizations/crud/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.organizations.crud"
   }
  },
  "ApiGatewayapiorganizationscrudPOSTDD1A5971": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "OrganizationsCrudFunctionB7E9984C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapiorganizationscrudBAC6FEA1"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/organizations/crud/POST/Resource"
   }
  },
  "ApiGatewayapiorganizationsmembers93EC0B7E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiorganizations6264A445"
    },
    "PathPart": "members",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/organizations/members/Resource"
   }
  },
  "ApiGatewayapiorganizationsmembersOPTIONSC2748E9B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiorganizationsmembers93EC0B7E"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/organizations/members/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiorganizationsmembersPOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapiorganizationsmembers9FFB0EFE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OrganizationsMembersFunctionDE0053AA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/organizations/members"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/organizations/members/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.organizations.members"
   }
  },
  "ApiGatewayapiorganizationsmembersPOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapiorganizationsmembersEAD5B5E9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OrganizationsMembersFunctionDE0053AA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/organizations/members"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/organizations/members/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.organizations.members"
   }
  },
  "ApiGatewayapiorganizationsmembersPOST5659EA33": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "OrganizationsMembersFunctionDE0053AA",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapiorganizationsmembers93EC0B7E"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/organizations/members/POST/Resource"
   }
  },
  "ApiGatewayapises91DCF212": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiBD54C415"
    },
    "PathPart": "ses",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/Resource"
   }
  },
  "ApiGatewayapisesOPTIONS6E93D833": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapises91DCF212"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/OPTIONS/Resource"
   }
  },
  "ApiGatewayapisescreateidentity8B7B6F58": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapises91DCF212"
    },
    "PathPart": "create-identity",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/create-identity/Resource"
   }
  },
  "ApiGatewayapisescreateidentityOPTIONSBCD2D673": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapisescreateidentity8B7B6F58"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/create-identity/OPTIONS/Resource"
   }
  },
  "ApiGatewayapisescreateidentityPOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapisescreateidentityE452AC47": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateSESIdentityFunctionB7240D58",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/ses/create-identity"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/create-identity/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.ses.create-identity"
   }
  },
  "ApiGatewayapisescreateidentityPOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapisescreateidentityFC4B47C0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateSESIdentityFunctionB7240D58",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/ses/create-identity"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/create-identity/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.ses.create-identity"
   }
  },
  "ApiGatewayapisescreateidentityPOSTCF434FF1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CreateSESIdentityFunctionB7240D58",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapisescreateidentity8B7B6F58"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/create-identity/POST/Resource"
   }
  },
  "ApiGatewayapisescreatedkim69EE4032": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapises91DCF212"
    },
    "PathPart": "create-dkim",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/create-dkim/Resource"
   }
  },
  "ApiGatewayapisescreatedkimOPTIONS46423C23": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapisescreatedkim69EE4032"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/create-dkim/OPTIONS/Resource"
   }
  },
  "ApiGatewayapisescreatedkimPOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapisescreatedkimB8EDE4E0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateSESDkimRecordsFunction96D74B56",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/ses/create-dkim"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/create-dkim/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.ses.create-dkim"
   }
  },
  "ApiGatewayapisescreatedkimPOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapisescreatedkimD5EE6749": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateSESDkimRecordsFunction96D74B56",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/ses/create-dkim"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/create-dkim/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.ses.create-dkim"
   }
  },
  "ApiGatewayapisescreatedkimPOST20E13E76": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CreateSESDkimRecordsFunction96D74B56",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapisescreatedkim69EE4032"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/create-dkim/POST/Resource"
   }
  },
  "ApiGatewayapisescheckdomain58C2CF7D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapises91DCF212"
    },
    "PathPart": "check-domain",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/check-domain/Resource"
   }
  },
  "ApiGatewayapisescheckdomainOPTIONS10F25FDC": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapisescheckdomain58C2CF7D"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/check-domain/OPTIONS/Resource"
   }
  },
  "ApiGatewayapisescheckdomainPOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapisescheckdomain94BC6687": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CheckDomainStatusFunction1093986F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/ses/check-domain"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/check-domain/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.ses.check-domain"
   }
  },
  "ApiGatewayapisescheckdomainPOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapisescheckdomain1A12C09C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CheckDomainStatusFunction1093986F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/ses/check-domain"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/check-domain/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.ses.check-domain"
   }
  },
  "ApiGatewayapisescheckdomainPOST32F66696": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CheckDomainStatusFunction1093986F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapisescheckdomain58C2CF7D"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/check-domain/POST/Resource"
   }
  },
  "ApiGatewayapisesverifydomainC183E4F1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapises91DCF212"
    },
    "PathPart": "verify-domain",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/verify-domain/Resource"
   }
  },
  "ApiGatewayapisesverifydomainOPTIONS4FE3316C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapisesverifydomainC183E4F1"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/verify-domain/OPTIONS/Resource"
   }
  },
  "ApiGatewayapisesverifydomainPOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapisesverifydomain715A6C68": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "verifyNewDomainValidFunction9AA58C80",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/ses/verify-domain"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/verify-domain/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.ses.verify-domain"
   }
  },
  "ApiGatewayapisesverifydomainPOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapisesverifydomain73B9C120": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "verifyNewDomainValidFunction9AA58C80",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/ses/verify-domain"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/verify-domain/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.ses.verify-domain"
   }
  },
  "ApiGatewayapisesverifydomainPOST006D8780": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "verifyNewDomainValidFunction9AA58C80",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapisesverifydomainC183E4F1"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/ses/verify-domain/POST/Resource"
   }
  },
  "ApiGatewayapiratelimitF4921C8E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiBD54C415"
    },
    "PathPart": "rate-limit",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/rate-limit/Resource"
   }
  },
  "ApiGatewayapiratelimitOPTIONS61AC2C5F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiratelimitF4921C8E"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/rate-limit/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiratelimitaiEBD274E4": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiratelimitF4921C8E"
    },
    "PathPart": "ai",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/rate-limit/ai/Resource"
   }
  },
  "ApiGatewayapiratelimitaiOPTIONS37483AA4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiratelimitaiEBD274E4"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/rate-limit/ai/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiratelimitaiPOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapiratelimitaiED9F16EE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RateLimitAIFunction2732CE5C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/rate-limit/ai"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/rate-limit/ai/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.rate-limit.ai"
   }
  },
  "ApiGatewayapiratelimitaiPOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapiratelimitai099BD860": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RateLimitAIFunction2732CE5C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/rate-limit/ai"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/rate-limit/ai/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.rate-limit.ai"
   }
  },
  "ApiGatewayapiratelimitaiPOST394A3E62": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "RateLimitAIFunction2732CE5C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapiratelimitaiEBD274E4"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/rate-limit/ai/POST/Resource"
   }
  },
  "ApiGatewayapiratelimitaws89854A3B": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiratelimitF4921C8E"
    },
    "PathPart": "aws",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/rate-limit/aws/Resource"
   }
  },
  "ApiGatewayapiratelimitawsOPTIONS5E836885": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiratelimitaws89854A3B"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/rate-limit/aws/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiratelimitawsPOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapiratelimitawsEB0B2B05": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RateLimitAWSFunctionCAFEA2B5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/rate-limit/aws"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/rate-limit/aws/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.rate-limit.aws"
   }
  },
  "ApiGatewayapiratelimitawsPOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapiratelimitaws6CE3E0A7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RateLimitAWSFunctionCAFEA2B5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/rate-limit/aws"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/rate-limit/aws/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.rate-limit.aws"
   }
  },
  "ApiGatewayapiratelimitawsPOSTF6F1EC9C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "RateLimitAWSFunctionCAFEA2B5",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapiratelimitaws89854A3B"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/rate-limit/aws/POST/Resource"
   }
  },
  "ApiGatewayapicors259CBC91": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiBD54C415"
    },
    "PathPart": "cors",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/cors/Resource"
   }
  },
  "ApiGatewayapicorsOPTIONS3696FB7B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapicors259CBC91"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/cors/OPTIONS/Resource"
   }
  },
  "ApiGatewayapicorsget11D4CCFC": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapicors259CBC91"
    },
    "PathPart": "get",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/cors/get/Resource"
   }
  },
  "ApiGatewayapicorsgetOPTIONSBD1CE642": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapicorsget11D4CCFC"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/cors/get/OPTIONS/Resource"
   }
  },
  "ApiGatewayapicorsgetGETApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1GETapicorsgetDC93246F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetCorsFunction67994118",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/GET/api/cors/get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/cors/get/GET/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.GET..api.cors.get"
   }
  },
  "ApiGatewayapicorsgetGETApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1GETapicorsget5100EF62": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetCorsFunction67994118",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/GET/api/cors/get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/cors/get/GET/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.GET..api.cors.get"
   }
  },
  "ApiGatewayapicorsgetGETABD03DED": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetCorsFunction67994118",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapicorsget11D4CCFC"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/cors/get/GET/Resource"
   }
  },
  "ApiGatewayapiauthorizerA3663BC5": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiBD54C415"
    },
    "PathPart": "authorizer",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/authorizer/Resource"
   }
  },
  "ApiGatewayapiauthorizerOPTIONS3C43BAA7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiauthorizerA3663BC5"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/authorizer/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiauthorizerPOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapiauthorizer7AAE2C58": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "APIAuthorizerFunctionE9E30643",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/authorizer"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/authorizer/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.authorizer"
   }
  },
  "ApiGatewayapiauthorizerPOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapiauthorizer98B17BFD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "APIAuthorizerFunctionE9E30643",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/authorizer"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/authorizer/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.authorizer"
   }
  },
  "ApiGatewayapiauthorizerPOST31210CB4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "APIAuthorizerFunctionE9E30643",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapiauthorizerA3663BC5"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/authorizer/POST/Resource"
   }
  },
  "ApiGatewayapiparseevent10D63FC9": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiBD54C415"
    },
    "PathPart": "parse-event",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/parse-event/Resource"
   }
  },
  "ApiGatewayapiparseeventOPTIONS9670419E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapiparseevent10D63FC9"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/parse-event/OPTIONS/Resource"
   }
  },
  "ApiGatewayapiparseeventPOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapiparseevent2B1A1F1A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParseEventFunction3795DCE1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/parse-event"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/parse-event/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.parse-event"
   }
  },
  "ApiGatewayapiparseeventPOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapiparseevent7175E48F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ParseEventFunction3795DCE1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/parse-event"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/parse-event/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.parse-event"
   }
  },
  "ApiGatewayapiparseeventPOST07B83786": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ParseEventFunction3795DCE1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapiparseevent10D63FC9"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/parse-event/POST/Resource"
   }
  },
  "ApiGatewayapitestscheduler2B265C1B": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ApiGatewayapiBD54C415"
    },
    "PathPart": "test-scheduler",
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/test-scheduler/Resource"
   }
  },
  "ApiGatewayapitestschedulerOPTIONS62CC8BB9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ApiGatewayapitestscheduler2B265C1B"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/test-scheduler/OPTIONS/Resource"
   }
  },
  "ApiGatewayapitestschedulerPOSTApiPermissionAcsd2PStackDevApiGatewayE6E6DCA1POSTapitestschedulerF5B3EBC1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TestSchedulerFunction66A427F5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/",
       {
        "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
       },
       "/POST/api/test-scheduler"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/test-scheduler/POST/ApiPermission.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.test-scheduler"
   }
  },
  "ApiGatewayapitestschedulerPOSTApiPermissionTestAcsd2PStackDevApiGatewayE6E6DCA1POSTapitestscheduler1A3BD837": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TestSchedulerFunction66A427F5",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-west-1:872515253712:",
       {
        "Ref": "ApiGateway11E7F47B"
       },
       "/test-invoke-stage/POST/api/test-scheduler"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/test-scheduler/POST/ApiPermission.Test.Acsd2PStackDevApiGatewayE6E6DCA1.POST..api.test-scheduler"
   }
  },
  "ApiGatewayapitestschedulerPOST6E0186D7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "TestSchedulerFunction66A427F5",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ApiGatewayapitestscheduler2B265C1B"
    },
    "RestApiId": {
     "Ref": "ApiGateway11E7F47B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/ApiGateway/Default/api/test-scheduler/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/+2dXW/bOBqFf8vocqB6285d7tw07RbTD0+cLLAwgoCW3jhsJVIlqQSu4P++oD4cJ0i7O9jFrKI+F4GV80gi9Z5DihFg5eXs5fMXs+e/qFv/LMu/PCv0etYsg8q+pOrWXzaZ3Rgd7Kw59+IW1harJqn7zY+qlOQo+TVJEy/F1VJvzHl1YtS6kDw5Cq6WNPF6Y96ZeaGVF58cNYmUShcd3aWJD8rkyuXzEJxe16HdZ5cmlfL+1rp8YQudbeNxpTbvxWzCdd+ik6+1dvLe3orLlJehwV4/r6pH9dd6o4N/IC635doWft8rlWW2NuFUMnsjbpscvYy7lvZGFUOHEidBaZPsLtLjKzMUJx02jgstJhzUqu91fY8fFHAjRpwKspTMSRj6p+pw/aawt23lVF7qrqW+OMNe9Xe0pav2l2TndSxdk1ztT1eHa+v0NxW0Ncc2l7dOmX3LuqwKnenwAETLMltFm9puZ6oo1ir7cu6KTtrdL0h3nbu0UOU6V7Nmqc2mkGDNm9pkseFYolrn/em63Ra1q6wfKlNKad12qb8NQtCl2DoMObDFAAq7eetsXfW/XvVNHFT5psrutpb12kjYX4nNh72ulckLcUMDtYktdleXRhvyDxJUroJKjlZxl1iYi8dR8mtysbtID652bJfzyGkPd3l4+MF5/82ViLnRzppSTDis3cmhfFcjIPCJQkYQEMjwAgInBhl7QOAIIQMTCHxqkFELBE4KMqSBwJ8HMt6BQCCTARAIZKYAAoFMI0Ag8OlD5hggEMgEBAQCgcxOQCDwqUOmLiAQODXIvAYEAn8qyKQHBAKBzIhAIBDIdAkEAoHMpUAgEDgtyEQLBAKBzMJAIBAIZIoGAoHAyUDmbyAQCJwgZHIHAoHAnw0y8wOBQCCQ2wIQCAQCuWcAgUAgkBsKEAgEAqcLudsAgUAgkFvRWEsDBAKBwP83vEiPr8yb/k4VtxfiSu29tmaXalXOmoUtdLZdNYkPKkg83h/edZYH6qrZdc2FoLLrM3tqC+ka+74ce/Lnjvh+s8j/lYwVo5GxYjQyVoxGxorRyFgxGhkrRiNjxWhkrBiNjBWjkbFiNDJWjEbGitHIWDEaGStGI2PFaGSsGI2MFaORsWI0MlaMRsaK0chYMRoZK0YjY8VoZKwYjYwVo5GxYjQyVoxGxorRyFgxGhkrxiK3XyrovjeQxoKvmkR5X5eSv9omR01SOW0yXalinmW2NsP32rp94gHz9usI/dcMklIZtZG8PaGWtpF72nbu+n0PrH5nCm2k44eG/4X9yPMzuxia2Pek+U96+UP44/NCx0CJGZSYEbNpUGIGJWbEbBqUmEGJGTGbBiVmUGJGzKZBiRmUmBGzaVBiBiVmxGwalJhBiRkxmwYlZlBiRsymQYkZlJgRs2lQYgYlZsRsGpSYQYkZMZsGJWZQYkbMpkGJGZSYEbNpUGIGJWbEbBqUmEGJGTF7+rR9IVaMzy7Nt0aVNl/PmjO1bl+NFeLnR1VKH7ZKuaBjyn6XNpPmDoVtFTeXMXtrXRTabD7YPEqL+T8vFyenl6cnf5yfLM+SNHFS2pu7fiROgtImnt9qE96ZM13KqWT2Rtw2OQqulngRo+lMmnjrwo9apbs/jdVpEnQpZ/a9vpF5CE6v6yD9xBqHVjuUdqn/bda8qrMvElZNsm43Dq7vRlz8t/aSD62Kydy26ufz5W+XH+Yf529PXidpsi5s9mVRrwudzbNMvO9P8d1rU3Wwr6WQIJ/WnyWLb8K7UoVv6zyOjrR16oqTdh+vlJfVxS71X/2s+aOWOk5GX+PnYV+112td6LCNvtk67DsQxMQeL8Rpm/+4W13jbRPRpEvlvQQ/m8ePtLAbP2ve281bZ+tq1SRFv7nvRSwiIuIYxDbJQ1h3qar0RgW5VdtZcyo+zCu9ahLXbR0Mo1x85nS1XztG5UrVRTi2zi+cXBV6cx0+tTv4OA2qorC3n5zeaDOM+Vb6IOHa5vekv4vKxXXSrl9qdB1IX0tV2G18NeeqeaQPqtJ3w1lpc7e735egXdW8txudqeJd/mC1g46Ojo6Ojo6Ojv6/1NvF7N2qNF0GtZF2KTtIB6vyFqan4m3tMmn/uo0PSNNuydwty1vUr3mvQ6g61gvaBNk4dbBAtgcL8jpcW6e/ibv/27vh6EFqjz/rHl20D4lVpX+X7al8rbWLf/O3f49/b/80KdsunYqvrPH9M2UfVKj9cffIpVuvd3ihnCol7Jf/F7u+lh/uneXPniSlWBSLYk2lWA+v7bCIfRe+1uLDP1ShcxXsAzk+6i38fe1BZx+pV/s0AruxG7uxG7spFmMDu7Ebu7EbuykWYwO7sRu7sRu7sRu7KRZjA7uxG7ux++e1m2IxNrCbYjE2sJtiMTawG7uxm2IxNrAbu7GbYjE2sBu7sRu7sRu7sZtiMTawG7uxm2IxNrAbu7Ebu7H7r7S7ff1O1+H9+3dWTXyhsOxfoV6pcL1Qrn9hTwqFQqFPhA5v1W2ntt0uzWofbHk5zNt+Nr/1x6027JTe/3XVnrT7uXey9LE9xvJzkbbv6I5vVtNmE7v9qQ5VHXapsbnMPvu/3bx8PnvxYvbil89e62euNvFF7bPT7vNfJJBHvgZ6AQA="
   },
   "Metadata": {
    "aws:cdk:path": "Acsd2PStack-Dev/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "ApiGatewayEndpoint5AA8EC3A": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ApiGateway11E7F47B"
      },
      ".execute-api.us-west-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
      },
      "/"
     ]
    ]
   }
  },
  "ApiGatewayUrl": {
   "Description": "API Gateway URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ApiGateway11E7F47B"
      },
      ".execute-api.us-west-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
      },
      "/"
     ]
    ]
   },
   "Export": {
    "Name": "dev-ApiGatewayUrl"
   }
  },
  "UserPoolId": {
   "Description": "Cognito User Pool ID",
   "Value": {
    "Ref": "UserPool6BA7E5F2"
   },
   "Export": {
    "Name": "dev-UserPoolId"
   }
  },
  "UserPoolClientId": {
   "Description": "Cognito User Pool Client ID",
   "Value": {
    "Ref": "UserPoolClient2F5918F7"
   },
   "Export": {
    "Name": "dev-UserPoolClientId"
   }
  },
  "EmailProcessQueueUrl": {
   "Description": "Email Process Queue URL",
   "Value": {
    "Ref": "EmailProcessQueue10E28519"
   },
   "Export": {
    "Name": "dev-EmailProcessQueueUrl"
   }
  },
  "UsersTableName": {
   "Description": "Users DynamoDB Table Name",
   "Value": {
    "Ref": "UsersTable9725E9C8"
   },
   "Export": {
    "Name": "dev-UsersTableName"
   }
  },
  "ConversationsTableName": {
   "Description": "Conversations DynamoDB Table Name",
   "Value": {
    "Ref": "ConversationsTableCD91EB96"
   },
   "Export": {
    "Name": "dev-ConversationsTableName"
   }
  },
  "ThreadsTableName": {
   "Description": "Threads DynamoDB Table Name",
   "Value": {
    "Ref": "ThreadsTable1D5C607C"
   },
   "Export": {
    "Name": "dev-ThreadsTableName"
   }
  },
  "OrganizationsTableName": {
   "Description": "Organizations DynamoDB Table Name",
   "Value": {
    "Ref": "OrganizationsTable01047E98"
   },
   "Export": {
    "Name": "dev-OrganizationsTableName"
   }
  },
  "RateLimitingTableName": {
   "Description": "RateLimiting DynamoDB Table Name",
   "Value": {
    "Ref": "RateLimitingTable259308DF"
   },
   "Export": {
    "Name": "dev-RateLimitingTableName"
   }
  },
  "StorageBucketName": {
   "Description": "Storage S3 Bucket Name",
   "Value": {
    "Ref": "StorageBucket19DB2FF8"
   },
   "Export": {
    "Name": "dev-StorageBucketName"
   }
  },
  "EmailAttachmentsBucketName": {
   "Description": "EmailAttachments S3 Bucket Name",
   "Value": {
    "Ref": "EmailAttachmentsBucket56FB991A"
   },
   "Export": {
    "Name": "dev-EmailAttachmentsBucketName"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}